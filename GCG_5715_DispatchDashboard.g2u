Program.Sub.ScreenSU.Start
Gui.frmResched..Create
Gui.frmResched..Size(15225,10380)
Gui.frmResched..MinX(14200)
Gui.frmResched..MinY(4000)
Gui.frmResched..Position(0,0)
Gui.frmResched..BackColor(-2147483633)
Gui.frmResched..MousePointer(0)
Gui.frmResched..Event(UnLoad,frmResched_UnLoad)
Gui.frmResched..Caption("Dispatch List Dashboard")
Gui.frmResched.GsGCWC.Create(GsGridControl)
Gui.frmResched.GsGCWC.Size(15105,8445)
Gui.frmResched.GsGCWC.Position(0,1110)
Gui.frmResched.GsGCWC.Event(RowCellClick,GsGCWC_RowCellClick)
Gui.frmResched.GsGCWC.Event(CellValueChanged,GsGCWC_CellValueChanged)
Gui.frmResched.GsGCWC.Anchor(15)
Gui.frmResched.picGSSLogo.Create(PictureBox)
Gui.frmResched.picGSSLogo.Size(4125,960)
Gui.frmResched.picGSSLogo.Position(5520,45)
Gui.frmResched.picGSSLogo.Event(DblClick,picGSSLogo_DblClick)
Gui.frmResched.picGSSLogo.ToolTip("Double-Click for additional functions")
Gui.frmResched.picGSSLogo.Anchor(1)
Gui.frmResched.pbStatus.Create(ProgressBar)
Gui.frmResched.pbStatus.Visible(False)
Gui.frmResched.pbStatus.Size(2985,255)
Gui.frmResched.pbStatus.Position(75,375)
Gui.frmResched.lblStatus.Create(Label,"****Change****",False,2985,255,0,75,135,True,0,"Arial",8,-986896,0)
Gui.frmResched.frameSched.Create(Frame)
Gui.frmResched.frameSched.Size(2880,450)
Gui.frmResched.frameSched.Position(12195,300)
Gui.frmResched.frameSched.Anchor(9)
Gui.frmResched.optFwd.Create(Option)
Gui.frmResched.optFwd.Size(735,255)
Gui.frmResched.optFwd.Position(885,165)
Gui.frmResched.optFwd.Caption("Fwd")
Gui.frmResched.optFwd.Parent("frameSched")
Gui.frmResched.optBwd.Create(Option)
Gui.frmResched.optBwd.Size(690,255)
Gui.frmResched.optBwd.Position(30,165)
Gui.frmResched.optBwd.Caption("Bwd")
Gui.frmResched.optBwd.Parent("frameSched")
Gui.frmResched.optHere.Create(Option)
Gui.frmResched.optHere.Size(1125,255)
Gui.frmResched.optHere.Position(1740,165)
Gui.frmResched.optHere.Parent("frameSched")
Gui.frmResched.optHere.Caption("From Here")
Gui.frmResched.optHere.BackColor(15790320)
Gui.frmResched.optHere.ForeColor(0)
Gui.frmResched.cmdSched.Create(Button)
Gui.frmResched.cmdSched.Size(900,375)
Gui.frmResched.cmdSched.Position(75,9600)
Gui.frmResched.cmdSched.Caption("Schedule")
Gui.frmResched.cmdSched.Event(Click,cmdSched_Click)
Gui.frmResched.cmdSched.Anchor(6)
Gui.frmResched.cmdClearSel.Create(Button)
Gui.frmResched.cmdClearSel.Size(1275,375)
Gui.frmResched.cmdClearSel.Position(1050,9600)
Gui.frmResched.cmdClearSel.Caption("Clear Selected")
Gui.frmResched.cmdClearSel.Event(Click,cmdClearSel_Click)
Gui.frmResched.cmdClearSel.Anchor(6)
Gui.frmResched.txtPrev.Create(TextBox,"Ready w/  < Qty",True,1350,300,0,12555,795,True,2,"Arial",8,8036607,1)
Gui.frmResched.txtPrev.Locked(True)
Gui.frmResched.txtPrev.ToolTip("Prev. Seq. Closed and Prev. Compl. Qty is not equal to Est. Qty.")
Gui.frmResched.txtPrev.Anchor(9)
Gui.frmResched.txtLate.Create(TextBox,"Late",True,480,300,0,14595,795,True,2,"Arial",8,-2147483633,1)
Gui.frmResched.txtLate.Locked(True)
Gui.frmResched.txtLate.Anchor(9)
Gui.frmResched.txtLate.ForeColor(255)
Gui.frmResched.txtReady.Create(TextBox,"Ready",True,630,300,0,13935,795,True,2,"Arial",8,9498256,1)
Gui.frmResched.txtReady.Locked(True)
Gui.frmResched.txtReady.ToolTip("Previous Seqs Closed")
Gui.frmResched.txtReady.Anchor(9)
Gui.frmResched.cmdSaveOrder.Create(Button)
Gui.frmResched.cmdSaveOrder.Size(1605,375)
Gui.frmResched.cmdSaveOrder.Position(13395,9600)
Gui.frmResched.cmdSaveOrder.Caption("Save Order To GUI")
Gui.frmResched.cmdSaveOrder.Event(Click,cmdSaveOrder_Click)
Gui.frmResched.cmdSaveOrder.Enabled(False)
Gui.frmResched.cmdSaveOrder.Anchor(10)
Gui.frmResched.lblLastAPSReload.Create(Label,"Last APS Reload: ",True,1350,255,0,30,870,True,0,"Arial",8,-2147483633,0)
Gui.frmResched.txtLastAPSReload.Create(TextBox,"",True,1950,300,0,1395,780,False,0,"Arial",8,-2147483643,1)
Gui.frmResched.cmdReloadAPS.Create(Button)
Gui.frmResched.cmdReloadAPS.Size(1815,375)
Gui.frmResched.cmdReloadAPS.Position(3360,735)
Gui.frmResched.cmdReloadAPS.Caption("Reload APS Schedule")
Gui.frmResched.cmdReloadAPS.Event(Click,cmdReloadAPS_Click)
Gui.frmResched.txtPrev2.Create(TextBox,"Ready w/ > Qty",True,1305,300,0,11220,795,True,2,"Arial",8,15128749,1)
Gui.frmResched.txtPrev2.Anchor(9)
Gui.frmResched.txtPrev2.ToolTip("Prev. Seq. Closed and Prev. Compl. Qty is not equal to Est. Qty.")
Gui.frmResched.txtPrev2.Locked(True)
Gui.frmResched.frameLinks.Create(Frame)
Gui.frmResched.frameLinks.Size(2880,450)
Gui.frmResched.frameLinks.Position(12195,-75)
Gui.frmResched.frameLinks.Anchor(9)
Gui.frmResched.optView.Create(Option)
Gui.frmResched.optView.Size(810,255)
Gui.frmResched.optView.Position(30,165)
Gui.frmResched.optView.Parent("frameLinks")
Gui.frmResched.optView.Caption("View")
Gui.frmResched.optEdit.Create(Option)
Gui.frmResched.optEdit.Size(810,255)
Gui.frmResched.optEdit.Position(885,165)
Gui.frmResched.optEdit.Parent("frameLinks")
Gui.frmResched.optEdit.Caption("Edit")
Gui.frmResched.optIssue.Create(Option)
Gui.frmResched.optIssue.Size(810,255)
Gui.frmResched.optIssue.Position(1740,165)
Gui.frmResched.optIssue.Parent("frameLinks")
Gui.frmResched.optIssue.Caption("Issue")
Gui.frmResched.lblLinks.Create(Label,"Links:",True,540,255,0,11640,120,True,0,"Arial",8,-2147483633,0)
Gui.frmResched.lblLinks.Anchor(9)
Gui.frmResched.lblSchedule.Create(Label,"Scheduling:",True,960,255,0,11220,480,True,0,"Arial",8,-2147483633,0)
Gui.frmResched.lblSchedule.Anchor(9)
Gui.frmResched.cmdClearGUIOrder.Create(Button)
Gui.frmResched.cmdClearGUIOrder.Size(1605,375)
Gui.frmResched.cmdClearGUIOrder.Position(11775,9600)
Gui.frmResched.cmdClearGUIOrder.Anchor(10)
Gui.frmResched.cmdClearGUIOrder.Caption("Clear GUI Order")
Gui.frmResched.cmdClearGUIOrder.Event(Click,cmdClearGUIOrder_Click)
Gui.FormSaveOrder..Create
Gui.FormSaveOrder..Caption("Save Order")
Gui.FormSaveOrder..Size(5130,5400)
Gui.FormSaveOrder..MinX(5130)
Gui.FormSaveOrder..MinY(5400)
Gui.FormSaveOrder..Position(0,0)
Gui.FormSaveOrder..BackColor(-2147483633)
Gui.FormSaveOrder..MousePointer(0)
Gui.FormSaveOrder..Event(UnLoad,FormSaveOrder_UnLoad)
Gui.FormSaveOrder.gsgcWorkcenters.Create(GsGridControl)
Gui.FormSaveOrder.gsgcWorkcenters.Size(5010,4350)
Gui.FormSaveOrder.gsgcWorkcenters.Position(0,300)
Gui.FormSaveOrder.gsgcWorkcenters.Anchor(15)
Gui.FormSaveOrder.lblSelect.Create(Label,"Select the WCs to Post:",True,1935,255,0,60,90,True,0,"Arial",8,-2147483633,0)
Gui.FormSaveOrder.cmdPost.Create(Button)
Gui.FormSaveOrder.cmdPost.Size(855,375)
Gui.FormSaveOrder.cmdPost.Position(4125,4710)
Gui.FormSaveOrder.cmdPost.Caption("Post")
Gui.FormSaveOrder.cmdPost.Event(Click,cmdPost_Click)
Gui.FormSaveOrder.cmdPost.Anchor(10)
Gui.FormSaveOrder.pbSaveOrder.Create(ProgressBar)
Gui.FormSaveOrder.pbSaveOrder.Size(2685,255)
Gui.FormSaveOrder.pbSaveOrder.Position(2265,30)
Gui.FormSaveOrder.pbSaveOrder.Visible(False)
Gui.FormSaveOrder.pbSaveOrder.Anchor(9)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.sWCList.Declare(String, "")
V.Global.bEdit.Declare(Boolean,False)
V.Global.bLoadData.Declare(Boolean, True)
V.Global.bLongPart.Declare
V.Global.sModifiedWCs.Declare(String)
V.Global.bRefreshModified.Declare(Boolean, False)
V.Global.bError.Declare(Boolean, False)
V.Global.sDeparmentFilter.Declare(String, "")
V.Global.bReload.Declare(Boolean, False)
V.Global.iPrintAudit.Declare(Long, -1)
V.Global.bViewWO.Declare(Boolean, False)
V.Global.bViewPart.Declare(Boolean, False)
V.Global.bEditWO.Declare(Boolean, False)
V.Global.bEditPart.Declare(Boolean, False)
V.Global.bIssue.Declare(Boolean, False)
Program.Sub.Preflight.End

Program.Sub.Main.Start
'GCG_5715_DispatchDashboard.g2u
'Trey S
'October 16th, 2019
'Internal Project
'stores extra columns in GCG_5715_COLUMNS
'to post the order to the GUI, this updates the Global\Files\APSDLccc file

F.Intrinsic.Control.Try

V.Local.sGssLogo.Declare
V.Local.bEdit.Declare
V.Local.bPassed.Declare
V.Local.bExists.Declare(Boolean)

F.Intrinsic.Control.SelectCase(V.Caller.Hook)
	F.Intrinsic.Control.Case(38110)
		V.Passed.777777.Set(1)
		F.Intrinsic.Control.CallSub(AddLog, "Project", "5715", "Task", "38110 Override", "Message", "Override Flag [777777] set on hook [38110].")
		
	F.Intrinsic.Control.CaseElse	
		F.Intrinsic.String.Build("{0}\GAB\GAS\GAB_GSS_Logo_Green_Dash.png", V.Caller.PluginsDir, V.Local.sGssLogo)
		F.Intrinsic.File.Exists(V.Local.sGssLogo, V.Local.bExists)
		F.Intrinsic.Control.If(V.Local.bExists)
			GUI.frmResched.picGSSLogo.Picture(V.Local.sGssLogo)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.CallSub(SetIcon)
		
		F.Intrinsic.Control.CallSub(CheckPermissions)
		
		Gui.frmResched.optBwd.Value(True)
		
		'datatable to keep track of modified rows
		F.Data.DataTable.Create("dtModifiedRecords", True)
		F.Data.DataTable.AddColumn("dtModifiedRecords", "Row", Long)
		
		'datatable to keep track of rescheduled jobs
		F.Data.DataTable.Create("dtRescheduled", True)
		F.Data.DataTable.AddColumn("dtRescheduled", "JOB", String)
		F.Data.DataTable.AddColumn("dtRescheduled", "SUFFIX", String)
			
		F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass,600)
		
		F.Intrinsic.Control.CallSub(CheckLongPart)
		F.Intrinsic.Control.CallSub(SecurityControls)
		F.Intrinsic.Control.CallSub(SetContextMenus)
		F.Intrinsic.Control.CallSub(SetWorkCenterGridContextMenu)
		F.Intrinsic.Control.CallSub(LoadDDLists)
		
		Gui.frmResched..Show
		GUI.frmResched..SetFocus
		
		F.Intrinsic.Control.CallSub(cmdRefresh_Click)

F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.CheckPermissions.Start
F.Intrinsic.Control.Try

v.Local.bChecked.Declare(boolean,false)

'check if in EditWO security group, gives them edit access on this dashboard
F.Global.Security.IsInGroup(V.Caller.User, "EditWO", V.Caller.CompanyCode, V.Global.bEdit)

'Check Print Audit Option
F.Global.General.ReadOption("400367",3,3,"0001",V.Global.iPrintAudit)

'Check User Permissions: View
F.Global.Security.CheckUserAccessIPM(536, 0, V.Global.bViewWO)'Shop Floor Control > View > Work Orders
F.Global.Security.CheckUserAccessIPM(321, 0, V.Global.bViewPart)'Inventory > View > Supply and Demand
F.Intrinsic.Control.If(V.Global.bViewWO, =, True, "OR", V.Global.bViewPart, =, True)
	Gui.frmResched.optView.Enabled(True)
	GUI.frmResched.optView.Value(1)
F.Intrinsic.Control.Else
	Gui.frmResched.optView.Enabled(False)
	Gui.frmResched.optView.Value(0)
F.Intrinsic.Control.EndIf

'Check User Permissions: Edit
F.Global.Security.CheckUserAccessIPM(527, 1, V.Global.bEditWO)'Shop Floor Control > File > Work Orders > Open
F.Global.Security.CheckUserAccessIPM(371, 0, V.Global.bEditPart)'Inventory > View > Supply and Demand with Edit
F.Intrinsic.Control.If(V.Global.bEditWO, =, True, "OR", V.Global.bEditPart, =, True)
	Gui.frmResched.optEdit.Enabled(True)
F.Intrinsic.Control.Else
	Gui.frmResched.optEdit.Enabled(False)
	Gui.frmResched.optEdit.Value(0)
F.Intrinsic.Control.EndIf

F.Global.Security.CheckUserAccessIPM(533, 0, V.Global.bIssue)'Shop Floor Control > Transactions > Issue Material
Gui.frmResched.optIssue.Enabled(V.Global.bIssue)
F.Intrinsic.Control.If(V.Global.bIssue.Not)
	Gui.frmResched.optIssue.Value(0)
F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.CheckPermissions.End

Program.Sub.SetContextMenus.Start
F.Intrinsic.Control.Try

Gui.frmResched..ContextMenuCreate("ctxWC")
Gui.frmResched.GsGCWC.ContextMenuAttach("ctxWC")
Gui.frmResched..ContextMenuAddItem("ctxWC","Refresh",0,"Refresh")
Gui.frmResched..ContextMenuAddItem("ctxWC","Export",0,"Export")
Gui.frmResched..ContextMenuAddItem("ctxWC","New",0,"New Work Order")
Gui.frmResched..ContextMenuSetItemEventHandler("ctxWC","Refresh","MenuClickRefresh")
Gui.frmResched..ContextMenuSetItemEventHandler("ctxWC","Export","MenuClickExport")
Gui.frmResched..ContextMenuSetItemEventHandler("ctxWC","New","MenuClickNew")
Gui.frmResched..ContextMenuAddItem("ctxWC","ResetColumns",0,"Reset Columns")
Gui.frmResched..ContextMenuSetItemEventHandler("ctxWC","ResetColumns","MenuClickResetColumns")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

Program.Sub.LoadDDLists.Start
F.Intrinsic.Control.Try

V.Local.sRet.Declare(String)

F.ODBC.Connection!con.ExecuteAndReturn("SELECT MACHINE FROM WORKCENTERS ORDER BY MACHINE", V.Local.sRet)
F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF, =, False)
	F.Intrinsic.String.Replace(V.Local.sRet, "#$#", "*!*", V.Global.sWCList)
F.Intrinsic.Control.EndIf

F.ODBC.Connection!con.ExecuteAndReturn("SELECT WORK_GROUP FROM WORKGROUP_HEAD ORDER BY WORK_GROUP", V.Local.sRet)
F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF, =, False)
	F.Intrinsic.String.Replace(V.Local.sRet, "#$#", "*!*", V.Local.sRet)
	F.Intrinsic.String.Build("{0}*!*{1}", V.Local.sRet, V.Global.sWCList, V.Global.sWCList)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadDDLists.End

Program.Sub.MenuClickRefresh.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.CallSub(cmdRefresh_Click)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickRefresh.End

Program.Sub.MenuClickExport.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.CallSub(Export, "Form", "frmResched", "GridControl", "GsGCWC", "FileName", "DispatchDashboard")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickExport.End

Program.Sub.Export.Start
'generic export
'pass Form, GridControl, and Filename base

F.Intrinsic.Control.Try

V.Local.sFileExport.Declare(String)
V.Local.bExcel.Declare(Boolean)
V.Local.bFileLocked.Declare(Boolean)
V.Local.sMessage.Declare(String)
V.Local.sType.Declare(String)
V.Local.sForm.Declare(String)
V.Local.sGridControl.Declare(String)
V.Local.sFileName.Declare(String)

V.Local.sForm.Set(V.Args.Form)
V.Local.sGridControl.Set(V.Args.GridControl)
V.Local.sFileName.Set(V.Args.FileName)

F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
F.Intrinsic.Control.If(V.Local.bExcel)
	V.Local.sType.Set("xlsx")
F.Intrinsic.Control.Else
	V.Local.sType.Set("csv")
F.Intrinsic.Control.EndIf

F.Intrinsic.File.MakeFilenameFriendly(V.Local.sFileName, V.Local.sFileName)
F.Intrinsic.String.Build("{0}\{1}_Export_{2}.{3}", V.Caller.LocalGssTempDir, V.Local.sFileName, V.Ambient.Date.FormatMMDD-YYYY, V.Local.sType, V.Local.sFileExport)
F.Intrinsic.File.IsFileLocked(V.Local.sFileExport, V.Local.bFileLocked)

F.Intrinsic.Control.If(V.Local.bFileLocked)
	F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}", V.Ambient.NewLine, V.Local.sFileExport, V.Local.sMessage)
	F.Intrinsic.UI.Msgbox(V.Local.sMessage,"File In Use")
F.Intrinsic.Control.Else
	Gui.[V.Local.sForm].[V.Local.sGridControl].Export(V.Local.sFileExport, V.Local.sType)
	F.Intrinsic.Task.ShellExec(0, "", V.Local.sFileExport, "", "", 1)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Export.End

Program.Sub.MenuClickResetColumns.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.CallSub(ResetSerialization, "REGID", "5715")
F.Intrinsic.Control.CallSub(cmdReFresh_Click, "Reset", True)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickResetColumns.End

Program.Sub.MenuClickNew.Start
F.Intrinsic.Control.Try

V.Local.iRet.Declare

F.Global.General.LaunchMenuTask(527,2,V.Local.iRet)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickNew.End

Program.Sub.CheckLongPart.Start
F.Intrinsic.Control.Try

F.Global.General.ReadOption("400861",0,False,"0000",V.Global.bLongPart)
F.Intrinsic.Control.If(V.Global.bLongPart,=,False)
	F.Global.General.ReadOption("400861",0,False,"0004",V.Global.bLongPart)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.CheckLongPart.End

Program.Sub.frmResched_UnLoad.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Global.bLoadData.Not)
	F.Intrinsic.Control.CallSub(Serialize, "Form", "frmResched", "GridControl", "GsGCWC", "GridView", "gvWC", "REGID", "5715")
F.Intrinsic.Control.EndIf
F.ODBC.Connection!con.Close

F.Intrinsic.Control.If(V.DataTable.dtModifiedRecords.Exists)
	F.Data.DataTable.Close("dtModifiedRecords")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.DataTable.dtRescheduled.Exists)
	F.Data.DataTable.Close("dtRescheduled")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.DataTable.dtWorkcenters.Exists)
	F.Data.DataTable.Close("dtWorkcenters")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.frmResched_UnLoad.End

Program.Sub.picGSSLogo_DblClick.Start
F.Intrinsic.Control.Try

F.Intrinsic.Task.ShellExec(0,"Open","http://www.globalshopsolutions.com/login-customer","","",0)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.picGSSLogo_DblClick.End

Program.Sub.cmdSched_Click.Start
F.Intrinsic.Control.Try

V.Local.sSched.Declare
V.Local.iRet.Declare
V.Local.sRet.Declare
V.Local.bSel.Declare
V.Local.bSched.Declare
V.Local.sJob.Declare
V.Local.sSuffix.Declare
V.Local.sSeq.Declare
V.Local.sPriority.Declare
V.Local.sWC.Declare
V.Local.sWCDesc.Declare
V.Local.fWCRate.Declare
V.Local.fWCCrewSize.Declare
V.Local.fWCFloat.Declare
V.Local.fWCPerMod.Declare
V.Local.sStartDate.Declare
V.Local.sDueDate.Declare
V.Local.sParams500030.Declare
V.Local.sParams5101.Declare
V.Local.sParams5100.Declare
V.Local.sSQL.Declare
V.Local.iCnt.Declare
V.Local.fSetup.Declare
V.Local.fRuntime.Declare
V.Local.sFilter.Declare(String)
V.Local.sOP.Declare(String)
V.Local.sOldWCDescription.Declare(String)
V.Local.bInString.Declare(Boolean)
V.Local.sOPRet.Declare(String)
V.Local.bRuntimSetup.Declare(Boolean)
V.Local.iMax.Declare(Long)

F.Intrinsic.Control.If(V.Screen.frmResched!optBwd.Value)
	V.Local.sSched.Set("B")
F.Intrinsic.Control.ElseIf(V.Screen.frmResched!optFwd.Value)
	V.Local.sSched.Set("F")
F.Intrinsic.Control.ElseIf(V.Screen.frmResched!optHere.Value)
	V.Local.sSched.Set("H")
F.Intrinsic.Control.EndIf

F.Data.DataView.Create("dtRescheduled", "dvRescheduled", 22)

F.Intrinsic.UI.Msgbox("Are you sure you want to continue?","Schedule Selected?",4,V.Local.iRet)
F.Intrinsic.Control.If(V.Local.iRet,=,6)
	Gui.frmResched.lblStatus.Caption("Scheduling Work Orders....")
	Gui.frmResched.lblStatus.Visible(True)
	Gui.frmResched.pbStatus.Visible(True)
	Gui.frmResched.pbStatus.Min(0)
	gui.frmResched.GsGCWC.SuspendLayout
	F.Intrinsic.Control.CallSub(disablecontrols)
	F.Intrinsic.Control.If(V.DataTable.dtWC.Exists)
		V.Local.iMax.Set(V.DataTable.dtWC.RowCount)
		Gui.frmResched.pbStatus.Max(V.Local.iMax.++)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtWC.RowCount--,1)
			Gui.frmResched.pbStatus.Value(V.Local.iCnt)
			Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","Sel",V.Local.iCnt,V.Local.bSel)
				F.Intrinsic.Control.If(V.Local.bSel,=,True)
					
					Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","JOB",V.Local.iCnt,V.Local.sJob)
					Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","SFX",V.Local.iCnt,V.Local.sSuffix)
					Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","SEQ",V.Local.iCnt,V.Local.sSeq)
					F.Intrinsic.String.LPad(V.Local.sSeq,"0",6,V.Local.sSeq)
					
					'add to list of rescheduled jobs
					F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'", V.Local.sJob, V.Local.sSuffix, V.Local.sFilter)
					F.Data.DataView.SetFilter("dtRescheduled", "dvRescheduled", V.Local.sFilter)
					
					F.Intrinsic.Control.If(V.DataView.dtRescheduled!dvRescheduled.RowCount, =, 0)
						F.Data.DataTable.AddRow("dtRescheduled", "Job", V.Local.sJob, "Suffix", V.Local.sSuffix)
					F.Intrinsic.Control.EndIf
					
					Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","PRIORITY2",V.Local.iCnt,V.Local.sPriority)
					
					Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","NewWC",V.Local.iCnt,V.Local.sWC)
				
					F.Intrinsic.Control.If(V.Local.sWC,=,"")
						Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","WC",V.Local.iCnt,V.Local.sWC)
					F.Intrinsic.Control.EndIf

					Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","DATE_DUE2",V.Local.iCnt,V.Local.sDueDate)
					F.Intrinsic.String.Format(V.Local.sDueDate,"MMDDYY",V.Local.sDueDate)
					Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","DATE_START",V.Local.iCnt,V.Local.sStartDate)
					F.Intrinsic.String.Format(V.Local.sStartDate,"MMDDYY",V.Local.sStartDate)

					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET PRIORITY = '{0}',DATE_DUE = '{1}' WHERE JOB = '{2}' AND SUFFIX = '{3}';",V.Local.sPriority,V.Local.sDueDate,V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)

					F.Intrinsic.String.Build("SELECT WC_NAME,STANDARD_COST,FLOAT,SCHED_PCT_MOD,CREWSIZE,NO_MACHINES,PROJ_GROUP FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Local.sWC.Trim,V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
					F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
					V.Local.sWCDesc.Set(V.Local.sRet(0))
								
					F.Intrinsic.String.Replace(V.Local.sWCDesc,"'","''",V.Local.sWCDesc)
					V.Local.fWCRate.Set(V.Local.sRet(1))
					V.Local.fWCFloat.Set(V.Local.sRet(2))
					V.Local.fWCPerMod.Set(V.Local.sRet(3))
					V.Local.fWCCrewSize.Set(V.Local.sRet(4))
					
					F.Intrinsic.String.Build("UPDATE JOB_OPERATIONS SET PART = '{0}',BURDEN = '{1}',CREW_SIZE = '{2}' WHERE JOB = '{3}' AND SUFFIX = '{4}' AND SEQ = '{5}';",V.Local.sWC.Trim,V.Local.fWCRate,V.Local.fWCCrewSize,V.Local.sJob,V.Local.sSuffix,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					F.Intrinsic.String.Build("UPDATE SCHED_WO_SUPP SET POST_FLOAT = '{0}',PERC_MODIFIER = '{1}' WHERE WO = '{2}' AND WO_SUFFIX = '{3}' AND WO_SEQ = '{4}';",V.Local.fWCFloat,V.Local.fWCPerMod,V.Local.sJob,V.Local.sSuffix,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)

					F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!{3}!*!!*!{4}",V.Local.sStartDate,V.Local.sDueDate,V.Local.sJob,V.Local.sSuffix,V.Local.sSched,V.Local.sParams500030)
					F.Global.General.CallWrapperSync(500030,V.Local.sParams500030)
					
					'make sure it's at the end of the list for that WC, fix sort after the loop
					F.Data.DataTable.SetValue("dtWC", V.Local.iCnt, "Sort", "9999")
					F.Intrinsic.Control.CallSub(SaveValue, "COLUMN", "SORT", "VALUE", "9999", "INDEX", V.Local.iCnt)

					F.Intrinsic.Control.CallSub(AddModifiedWC, "WC", V.DataTable.dtWC(V.Local.iCnt).WC!FieldValTrim)
					F.Intrinsic.Control.CallSub(AddModifiedWC, "WC", V.Local.sWC)
					
				F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
		
		F.Intrinsic.Control.CallSub(FixOriginalSort)
		'V.Global.bRefreshModified.Set(True)
		F.Intrinsic.Control.CallSub(cmdrefresh_click)

	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.CallSub(enablecontrols)
	gui.frmResched.GsGCWC.ResumeLayout
	Gui.frmResched.lblStatus.Visible(False)
	Gui.frmResched.pbStatus.Visible(False)
F.Intrinsic.Control.EndIf

F.Data.DataView.Close("dtRescheduled", "dvRescheduled")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdSched_Click.End

Program.Sub.cmdRefresh_Click.Start
F.Intrinsic.Control.Try

V.Local.iSortLock.Declare(Long)
V.Local.bArgs.Declare(Boolean)

Gui.frmResched.GsGCWC.Visible(False)
GUI.frmResched.GsGCWC.SuspendLayout
F.Intrinsic.Control.CallSub(DisableControls)

F.Intrinsic.Control.If(V.Global.bLoadData.Not)
	F.Intrinsic.Variable.ArgExists("Reset", V.Local.bArgs)
	F.Intrinsic.Control.If(V.Local.bArgs.Not)
		F.Intrinsic.Control.CallSub(Serialize, "Form", "frmResched", "GridControl", "GsGCWC", "GridView", "gvWC", "REGID", "5715")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

V.Global.bLoadData.Set(True)
F.Intrinsic.Control.BlockEvents
F.Intrinsic.Control.CallSub(LoadJobs)
F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.CallSub(EnableControls)
F.Intrinsic.Control.CallSub(Deserialize, "Form", "frmResched", "GridControl", "GsGCWC", "GridView", "gvWC", "REGID", "5715")
F.Intrinsic.Control.CallSub(FixSort)
V.Global.bLoadData.Set(False)

F.Intrinsic.Control.CallSub(LoadAPSReloadFile)

GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Sort", "SortOrder", "Ascending")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_GROUP_HEADER", "GroupIndex", 0)

GUI.frmResched.GsGCWC.ResumeLayout
Gui.frmResched.GsGCWC.Visible(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.DisableControls.Start
F.Intrinsic.Control.Try

Gui.frmResched.frameSched.Enabled(False)	
Gui.frmResched.cmdSched.Enabled(False)
GUI.frmResched.cmdClearSel.Enabled(False)
Gui.frmResched.GsGCWC.Enabled(False)
GUI.frmResched.cmdSaveOrder.Enabled(False)
GUI.frmResched.cmdClearGUIOrder.Enabled(False)
GUI.frmResched.cmdReloadAPS.Enabled(False)
GUI.frmResched.frameLinks.Enabled(False)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.DisableControls.End

Program.Sub.EnableControls.Start
F.Intrinsic.Control.Try

Gui.frmResched.frameSched.Enabled(True)	
Gui.frmResched.cmdSched.Enabled(V.Global.bEdit)
GUI.frmResched.cmdClearSel.Enabled(V.Global.bEdit)
Gui.frmResched.GsGCWC.Enabled(True)
GUI.frmResched.cmdClearGUIOrder.Enabled(V.Global.bEdit)
GUI.frmResched.cmdSaveOrder.Enabled(V.Global.bEdit)
GUI.frmResched.cmdReloadAPS.Enabled(V.Global.bEdit)
GUI.frmResched.frameLinks.Enabled(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.EnableControls.End

Program.Sub.LoadGVWC.Start
F.Intrinsic.Control.Try

V.Local.iCnt.Declare
V.Local.iIndex.Declare(Long, -1)
V.Local.bSort.Declare(Boolean)

F.Intrinsic.Control.If(V.DataView.dtWC!dvGridView.Exists)
	F.Data.DataView.Close("dtWC", "dvGridView")
F.Intrinsic.Control.EndIf

F.Data.DataView.Create("dtWC", "dvGridView", 22, "", "")
Gui.frmResched.GsGCWC.AddGridviewFromDataview("gvWC","dtWC", "dvGridView")

Gui.frmResched.GsGCWC.SetGridViewProperty("gvWC","AllowFilter",True)
Gui.frmResched.GsGCWC.SetGridViewProperty("gvWC","ShowGroupPanel", False)
Gui.frmResched.GsGCWC.SetGridViewProperty("gvWC","AllowColumnResizing",True)
Gui.frmResched.GsGCWC.SetGridViewProperty("gvWC","OptionsViewColumnAutoWidth",False)
Gui.frmResched.GsGCWC.SetGridViewProperty("gvWC","AllowSort", False)

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Sel","Fixed","Left")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WO","Fixed","Left")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SEQ","Fixed","Left")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WC","Fixed","Left")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","NewWC","Fixed","Left")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UP", "Fixed", "Left")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "DOWN", "Fixed", "Left")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "SORT", "Fixed", "Left")

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Sel","Caption","Select")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WO","Caption","WO")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PRIORITY2","Caption","Priority")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SEQ","Caption","Seq")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WC","Caption","WC/WG")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","NewWC","Caption","New WC/WG")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DEPT","Caption","Dept")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DISPLAY_PART","Caption","Part")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PART_DESCRIPTION","Caption","Description")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","STARTDATE","Caption","Seq Start Date")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DUEDATE","Caption","Seq Due Date")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_DUE2","Caption","WO Due Date")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SCHED_DATE","Caption","WO Sched Due Date")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_HRS","Caption","Est. Hrs.")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","ACT_HRS","Caption","Act. Hrs.")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_HRS","Caption","Rem. Hrs.")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_QTY","Caption","Est. Qty")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_QTY","Caption","Rem. Qty")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PrevQty","Caption","Previous Qty")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_COMPLETE","Caption","Units Complete")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_OPEN_THIS_PARTIAL","Caption","Partial Open")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","JOB","Caption","Job")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SFX","Caption","Suffix")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PREVSEQ","Caption","Prev. Seq")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PREVCLSD","Caption","Prev. Seq Closed")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_START","Caption","WO Start Date")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","LOC","Caption","Loc")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_ORIG_DUE","Caption","Orig. Due Date")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Sort", "Caption", "Sort")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Notes", "Caption", "Notes")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Operation", "Caption", "Operation")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PrevOperation", "Caption", "Prev. Operation")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Customer", "Caption", "Customer")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Customer_PO", "Caption", "Customer PO")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "MAT", "Caption", "Mat Seq Closed")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UNITS_SCRAP", "Caption", "Scrap")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "RUNTIME", "Caption", "Runtime")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREV_UNITS_SCRAP", "Caption", "Prev Scrap")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "EST_REM_HOURS", "Caption", "Est Rem Hrs")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_OPERATION", "Caption", "Next Operation")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_SEQUENCE", "Caption", "Next Sequence")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_WC", "Caption", "Next WC")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_WC", "Caption", "Prev. WC")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "RELEASED", "Caption", "Released")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "DATE_DUE", "Caption", "Date Due (No Edit)")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "LABOR_INDEX", "Caption", "Labor Index")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "JOBSUFF", "Caption", "Job Suffix")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "ORIGINAL_SORT", "Caption", "Original Sort")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PART", "Caption", "Full Part")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PRIORITY", "Caption", "Priority (No Edit)")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PARENT_WO", "Caption", "Parent WO")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PARENT_PART", "Caption", "Parent Part")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PARENT_DESC", "Caption", "Parent Desc")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_PARENT_WO", "Caption", "Top Parent WO")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_PARENT_PART", "Caption", "Top Parent Part")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_PARENT_DESC", "Caption", "Top Parent Desc")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_PARENT_DUE", "Caption", "Top Parent Due Date")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_DESCRIPTION", "Caption", "WC Description")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_GROUP_HEADER", "Caption", "WC")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_MATERIAL_SEQUENCE", "Caption", "Top Material")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "SORT_CODE", "Caption", "Sort Code")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UNSORTED", "Caption", "Unsorted")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_REMAINING_HOURS", "Caption", "Prev Rem Hrs")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "SCHEDULED_WC", "Caption", "Scheduled WC / WG")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_SEQUENCE_CLOSED_BOOLEAN", "Caption", "Previous Seq. Closed")

GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Up", "ShowCaption", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "DOWN", "ShowCaption", False)

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Sel","MinWidth","30")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WO","MinWidth","75")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PRIORITY2","MinWidth","30")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SEQ","MinWidth","65")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WC","MinWidth","80")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","NewWC","MinWidth","80")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DEPT","MinWidth","50")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DISPLAY_PART","MinWidth","110")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PART_DESCRIPTION","MinWidth","200")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","STARTDATE","MinWidth","90")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DUEDATE","MinWidth","80")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_DUE2","MinWidth","80")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SCHED_DATE","MinWidth","120")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_HRS","MinWidth","70")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","ACT_HRS","MinWidth","70")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_HRS","MinWidth","70")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_QTY","MinWidth","50")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_QTY","MinWidth","45")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PrevQty","MinWidth","95")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_COMPLETE","MinWidth","50")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_OPEN_THIS_PARTIAL","MinWidth","45")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Sort", "MinWidth", 50)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Notes", "MinWidth", 150)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Operation", "MinWidth", 75)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PrevOperation", "MinWidth", 70)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Mat", "MinWidth", 50)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Customer", "MinWidth", 110)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UP", "MinWidth", 20)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "DOWN", "MinWidth", 20)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UNITS_SCRAP", "MinWidth", 60)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "RUNTIME", "MinWidth", 60)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREV_UNITS_SCRAP", "MinWidth", 60)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "EST_REM_HOURS", "MinWidth", 45)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Customer_PO", "MinWidth", 80)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_OPERATION", "MinWidth", 70)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_SEQUENCE", "MinWidth", 65)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_WC", "MinWidth", 80)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_WC", "MinWidth", 80)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "RELEASED", "MinWidth", 40)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PARENT_WO", "MinWidth", 75)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PARENT_PART", "MinWidth", 110)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PARENT_DESC", "MinWidth", 200)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_PARENT_WO", "MinWidth", 100)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_PARENT_PART", "MinWidth", 130)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_PARENT_DESC", "MinWidth", 220)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_PARENT_DUE", "MinWidth", 220)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_DESCRIPTION", "MinWidth", 100)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_GROUP_HEADER", "MinWidth", 140)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_MATERIAL_SEQUENCE", "MinWidth", 120)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "SORT_CODE", "MinWidth", 60)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UNSORTED", "MinWidth", 50)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_REMAINING_HOURS", "MinWidth", 60)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "SCHEDULED_WC", "MinWidth", 80)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_SEQUENCE_CLOSED_BOOLEAN", "MinWidth", 50)

F.Intrinsic.Control.If(V.Global.bLongPart)
	Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DISPLAY_PART","MinWidth","250")
F.Intrinsic.Control.EndIf

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Sel","ReadOnly",V.Global.bEdit.Not)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WO","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SEQ","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WC","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DEPT","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DISPLAY_PART","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PART_DESCRIPTION","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","STARTDATE","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DUEDATE","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SCHED_DATE","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_HRS","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","ACT_HRS","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_HRS","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_QTY","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_QTY","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PrevQty","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_COMPLETE","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SFX","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_OPEN_THIS_PARTIAL","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","JOB","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PREVSEQ","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PREVCLSD","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_START","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","LOC","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_ORIG_DUE","ReadOnly",True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Notes", "ReadOnly", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Operation", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PrevOperation", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Customer", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Customer_PO", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Mat", "ReadOnly", True)	
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Loc", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "JOBSUFF", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Sort", "ReadOnly", V.Global.bEdit.Not)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UP", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "DOWN", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UNITS_SCRAP", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "RUNTIME", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREV_UNITS_SCRAP", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "EST_REM_HOURS", "ReadOnly", True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PRIORITY2","ReadOnly",V.Global.bEdit.Not)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","NewWC","ReadOnly",V.Global.bEdit.Not)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_DUE2","ReadOnly",V.Global.bEdit.Not)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_OPERATION", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_SEQUENCE", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_WC", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_WC", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "RELEASED", "ReadOnly", True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PARENT_WO","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PARENT_PART","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PARENT_DESC","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOP_PARENT_WO","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOP_PARENT_PART","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOP_PARENT_DESC","ReadOnly",True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOP_PARENT_DUE","ReadOnly",True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_DESCRIPTION", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_GROUP_HEADER", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_MATERIAL_SEQUENCE", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "SORT_CODE", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UNSORTED", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_REMAINING_HOURS", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "SCHEDULED_WC", "ReadOnly", True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_SEQUENCE_CLOSED_BOOLEAN", "ReadOnly", True)

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Sel","AllowEdit",V.Global.bEdit)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WO","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SEQ","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WC","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DEPT","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DISPLAY_PART","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PART_DESCRIPTION","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","STARTDATE","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DUEDATE","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SCHED_DATE","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_HRS","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","ACT_HRS","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_HRS","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_QTY","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_QTY","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PrevQty","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_COMPLETE","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_OPEN_THIS_PARTIAL","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SFX","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","JOB","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PREVSEQ","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PREVCLSD","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_START","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","LOC","AllowEdit",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_ORIG_DUE","AllowEdit",False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Operation", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PrevOperation", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Customer", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Customer_PO", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Mat", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Loc", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "JOBSUFF", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Sort", "AllowEdit", V.Global.bEdit)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_DUE2","AllowEdit", V.Global.bEdit)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UP", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "DOWN", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UNITS_SCRAP", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREV_UNITS_SCRAP", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "EST_REM_HOURS", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Notes", "AllowEdit", True)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PRIORITY2","AllowEdit",V.Global.bEdit)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","NewWC","AllowEdit",V.Global.bEdit)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_OPERATION", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_SEQUENCE", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "NEXT_WC", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_WC", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "RELEASED", "AllowEdit", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PARENT_WO","ReadOnly",True)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_DESCRIPTION", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_GROUP_HEADER", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "TOP_MATERIAL_SEQUENCE", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "SORT_CODE", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UNSORTED", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_REMAINING_HOURS", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "SCHEDULED_WC", "AllowEdit", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_SEQUENCE_CLOSED_BOOLEAN", "AllowEdit", False)

F.Intrinsic.Control.If(V.Global.bEdit)
	Gui.frmResched.GsGCWC.ColumnEdit("gvWC","NewWC","Dropdownlist",V.Global.sWCList)
	Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PRIORITY2","CellBackColor","LightYellow")
	Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","NewWC","CellBackColor","LightYellow")
F.Intrinsic.Control.EndIf

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SEQ","DisplayCustomNumeric","000000")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_HRS","DisplayCustomNumeric","#,###,##0.00")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","ACT_HRS","DisplayCustomNumeric","#,###,##0.00")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_HRS","DisplayCustomNumeric","#,###,##0.00")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_QTY","DisplayCustomNumeric","#,###,##0")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_QTY","DisplayCustomNumeric","#,###,##0")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PrevQty","DisplayCustomNumeric","#,###,##0")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_COMPLETE","DisplayCustomNumeric","#,###,##0")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_OPEN_THIS_PARTIAL","DisplayCustomNumeric","#,###,##0")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_REM_HOURS","DisplayCustomNumeric","#,###,##0.00")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","RUNTIME","DisplayCustomNumeric","#,###,##0.00")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PREVIOUS_REMAINING_HOURS","DisplayCustomNumeric","#,###,##0.00")

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","STARTDATE","DisplayCustomDatetime","d")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DUEDATE","DisplayCustomDatetime","d")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_DUE2","DisplayCustomDatetime","d")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SCHED_DATE","DisplayCustomDatetime","d")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_ORIG_DUE","DisplayCustomDatetime","d")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOP_PARENT_DUE","DisplayCustomDatetime","d")

F.Intrinsic.Control.CallSub(SetGridViewProperty, "FORM", "frmResched", "GRIDVIEW", "gvWC", "DATATABLE", "dtWC", "PROPERTY", "HeaderFontBold", "Value", "True", "GRIDCONTROL", "GsGCWC")
F.Intrinsic.Control.CallSub(SetGridViewProperty, "FORM", "frmResched", "GRIDVIEW", "gvWC", "DATATABLE", "dtWC", "PROPERTY", "HeaderHAlignment", "Value", "Center", "GRIDCONTROL", "GsGCWC")
F.Intrinsic.Control.CallSub(SetGridViewProperty, "FORM", "frmResched", "GRIDVIEW", "gvWC", "DATATABLE", "dtWC", "PROPERTY", "CellHAlignment", "Value", "Center", "GRIDCONTROL", "GsGCWC")

'changing part and description to be left aligned
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DISPLAY_PART","CellHAlignment", "Near")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DISPLAY_PART","HeaderHAlignment", "Near")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PART_DESCRIPTION", "CellHAlignment", "Near")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PART_DESCRIPTION", "HeaderHAlignment", "Near")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "CUSTOMER", "CellHAlignment", "Near")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "CUSTOMER", "HeaderHAlignment", "Near")

F.Intrinsic.Control.CallSub(SetGridViewProperty, "FORM", "frmResched", "GRIDVIEW", "gvWC", "DATATABLE", "dtWC", "PROPERTY", "Visible", "Value", True, "GRIDCONTROL", "GsGCWC")

GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Loc", "Visible", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "JOBSUFF", "Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","JOB","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SFX","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PRIORITY","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_START","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_DUE","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PrevSeq","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PrevClsd","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PART","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Original_Sort","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Priority2","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","LABOR_INDEX","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PrevOperation","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_SCRAP","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PREV_UNITS_SCRAP","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","LATE","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_OPEN_THIS_PARTIAL","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","NEXT_SEQUENCE","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PREVIOUS_WC","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","NEXT_OPERATION","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PARENTJOBSUFF","Visible",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOPPARENTJOBSUFF","Visible",False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_DESCRIPTION", "Visible", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WC", "Visible", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "PREVIOUS_REMAINING_HOURS", "Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PARENT_WO","Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PARENT_PART","Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PARENT_DESC","Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOP_PARENT_WO","Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOP_PARENT_PART","Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOP_PARENT_DESC","Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOP_PARENT_DUE","Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOP_MATERIAL_SEQUENCE","Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SCHEDULED_WC","Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PREVIOUS_SEQUENCE_CLOSED_BOOLEAN","Visible", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","APS_JSS","Visible", False)

GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "JOBSUFF", "AllowShowHide", False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","JOB","AllowShowHide",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SFX","AllowShowHide",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PRIORITY","AllowShowHide",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_DUE","AllowShowHide",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PrevClsd","AllowShowHide",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PART","AllowShowHide",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Original_Sort","AllowShowHide",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","LABOR_INDEX","AllowShowHide",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PARENTJOBSUFF","AllowShowHide",False)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","TOPPARENTJOBSUFF","AllowShowHide",False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WORKCENTER_DESCRIPTION", "AllowShowHide", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "WC", "AllowShowHide", False)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "APS_JSS", "AllowShowHide", False)

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Sel","VisibleIndex",V.Local.iIndex.++)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UP", "VisibleIndex", V.Local.iIndex.++)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "DOWN", "VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Sort","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNSORTED","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WO","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SEQ","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","NewWC","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SCHEDULED_WC","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DEPT","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DISPLAY_PART","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PART_DESCRIPTION","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Operation","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","NEXT_WC","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Customer","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Customer_PO","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","STARTDATE","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DUEDATE","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_ORIG_DUE","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","DATE_DUE2","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SCHED_DATE","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_HRS","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","ACT_HRS","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_HRS","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_QTY","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","UNITS_COMPLETE","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","REM_QTY","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","EST_REM_HOURS","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","PrevQty","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","MAT","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Notes","VisibleIndex", V.Local.iIndex.++)
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","SORT_CODE","VisibleIndex", V.Local.iIndex.++)

GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Sort", "EditMaskType", "Numeric")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Sort", "EditMask", "###0")

GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Notes", "EditMaskType", "RegEx")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Notes", "EditMask", "[A-Za-z0-9 .?!-]{0,100}")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Notes", "EditMaskAsDisplayFormat", True)

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WO","CellForeColor","Blue")
Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Display_Part","CellForeColor","Blue")

GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Sort", "CellBackColor", "LightYellow")
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "Notes", "CellBackColor", "LightYellow")

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","WC","CellTrimming","Character")

Gui.frmResched.GsGCWC.AddSummaryItem("gvWC","EST_HRS","SUM_EST_HRS","Sum","","","n")
Gui.frmResched.GsGCWC.AddSummaryItem("gvWC","ACT_HRS","SUM_ACT_HRS","Sum","","","n")
Gui.frmResched.GsGCWC.AddSummaryItem("gvWC","REM_HRS","SUM_REM_HRS","Sum","","","n")

GUI.frmResched.GsGCWC.ColumnEdit("gvWC", "UP", "EditorButton", "+")
GUI.frmResched.GsGCWC.ColumnEdit("gvWC", "DOWN", "EditorButton", "-")

GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "UP", "Width", 30)
GUI.frmResched.GsGCWC.SetColumnProperty("gvWC", "DOWN", "Width", 30)

Gui.frmResched.GsGCWC.SetColumnProperty("gvWC","Notes","MaxLength", 100)

F.Intrinsic.Control.CallSub(ConditionalFormatting)

Gui.frmResched.GsGCWC.MainView("gvWC")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadGVWC.End

Program.Sub.GsGCWC_RowCellClick.Start
F.Intrinsic.Control.Try

V.Local.sJob.Declare
V.Local.sSuffix.Declare
V.Local.sParams.Declare
V.Local.sPart.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sLoc.Declare(String)
V.Local.iRowIndex.Declare(Long)
V.Local.iSort.Declare(Long)
V.Local.iOtherSort.Declare(Long)
V.Local.iOtherRowIndex.Declare(Long)
V.Local.iRowHandle.Declare(Long)
V.Local.iOtherRowHandle.Declare(Long)
V.Local.sWC.Declare(String)
V.Local.sOtherWC.Declare(String)
V.Local.sSelect.Declare(String)
V.Local.sDTRet.Declare(String)
V.Local.iTemp.Declare(Long)
V.Local.sFilter.Declare(String)
V.Local.iRet.Declare(Long)
V.Local.bIssue.Declare(Boolean)
V.Local.bEdit.Declare(Boolean)
V.Local.bView.Declare(Boolean)

F.Intrinsic.Control.BlockEvents

V.Local.bIssue.Set(V.Screen.frmResched!optIssue.Value)
V.Local.bEdit.Set(V.Screen.frmResched!optEdit.Value)
V.Local.bView.Set(V.Screen.frmResched!optView.Value)

F.Intrinsic.Control.SelectCase(V.Args.Column)
	F.Intrinsic.Control.Case("WO")
		Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","JOB",V.Args.RowIndex,V.Local.sJob)
		Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","SFX",V.Args.RowIndex,V.Local.sSuffix)
		
		F.Intrinsic.Control.If(V.Local.bIssue)
			F.Intrinsic.Control.CallSub(disablecontrols)
			F.Global.Callwrapper.New("Issue","Manufacturing.IssueMaterialToWip")
			F.Global.Callwrapper.SetProperty("Issue","WorkOrder",V.Local.sJob)
			F.Global.Callwrapper.SetProperty("Issue","Suffix", V.Local.sSuffix)
			F.Global.CallWrapper.Run("Issue")
			
			F.Intrinsic.Control.SelectCase(V.Global.iPrintAudit)
					F.Intrinsic.Control.Case(1)
						F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.Case(2)
						'Do Not Print
					F.Intrinsic.Control.Case(3)
						F.Intrinsic.UI.Msgbox("Print Audit Trail?","Print",4,V.Local.iRet)
						F.Intrinsic.Control.If(V.Local.iRet,=,6)
							F.Global.General.CallWrapperSync(50,"JB0057")
						F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndSelect
				
			F.Intrinsic.Control.CallSub(enablecontrols)
		F.Intrinsic.Control.ElseIf(V.Local.bEdit)
			F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sJob, V.Local.sSuffix, "O", V.Local.sParams)
			F.Intrinsic.Control.CallSub(disablecontrols)
			F.Global.General.CallWrapperSync(2009, V.Local.sParams)
			F.Intrinsic.Control.CallSub(enablecontrols)
		F.Intrinsic.Control.ElseIf(V.Local.bView)
			F.Intrinsic.String.ConcatCallWrapperArgs(7, V.Local.sJob, V.Local.sSuffix, "A", V.Local.sParams)
			F.Intrinsic.Control.CallSub(disablecontrols)
			F.Global.General.CallWrapperSync(450000,V.Local.sParams)
			F.Intrinsic.Control.CallSub(enablecontrols)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Case("DISPLAY_PART")
		
		Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","Part",V.Args.RowIndex,V.Local.sPart)
		Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","Loc",V.Args.RowIndex,V.Local.sLoc)
		
		F.Intrinsic.Control.If(V.Local.bIssue, =, True, "OR", V.Local.bEdit, =, True)
			F.Intrinsic.String.Build("{0}!*!{1}!*!M", V.Local.sPart, V.Local.sLoc, V.Local.sParams)
			F.Intrinsic.Control.CallSub(disablecontrols)
			F.Global.General.CallWrapperSync(300011, V.Local.sParams)
			F.Intrinsic.Control.CallSub(enablecontrols)
		F.Intrinsic.Control.ElseIf(V.Local.bView)
			F.Intrinsic.String.Build("{0}!*!{1}", V.Local.sPart, V.Local.sLoc, V.Local.sParams)
			F.Intrinsic.Control.CallSub(disablecontrols)
			F.Global.General.CallWrapperSync(300010, V.Local.sParams)
			F.Intrinsic.Control.CallSub(enablecontrols)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Case("UP")
		
		F.Intrinsic.Control.If(V.Global.bEdit)
			V.Local.iRowIndex.Set(V.Args.RowIndex)
			V.Local.iSort.Set(V.DataTable.dtWC(V.Local.iRowIndex).Sort!FieldValLong)
			
			'Have to get the previous row
			V.Local.sWC.Set(V.DataTable.dtWC(V.Local.iRowIndex).WC!FieldValTrim)
			F.Intrinsic.String.Build("WC = '{0}' and SORT < {1}", V.Local.sWC, V.Local.iSort, V.Local.sSelect)
			F.Data.DataTable.Select("dtWC", V.Local.sSelect, V.Local.sDTRet)
			
			F.Intrinsic.Control.If(V.Local.sDTRet.IsNoReturn)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Split(V.Local.sDTRet, "*!*", V.Local.sDTRet)
			V.Local.iOtherRowIndex.Set(V.Local.sDTRet(V.Local.sDTRet.UBound))
			V.Local.iOtherSort.Set(V.DataTable.dtWC(V.Local.iOtherRowIndex).SORT!FieldValLong)
			
			'swap
			V.Local.iTemp.Set(V.Local.iSort)
			V.Local.iSort.Set(V.Local.iOtherSort)
			V.Local.iOtherSort.Set(V.Local.iTemp)

			F.Data.DataTable.SetValue("dtWC", V.Local.iRowIndex, "Sort", V.Local.iSort)
			
			F.Data.DataTable.SetValue("dtWC", V.Local.iOtherRowIndex, "Sort", V.Local.iOtherSort)
			F.Intrinsic.Control.CallSub(AddModifiedWC, "WC", V.DataTable.dtWC(V.Local.iRowIndex).WC!FieldValTrim)
			F.Intrinsic.Control.CallSub(AddModifiedWC, "WC", V.DataTable.dtWC(V.Local.iOtherRowIndex).WC!FieldValTrim)
			F.Intrinsic.Control.CallSub(SaveModifiedWCSort)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Case("DOWN")
	
		F.Intrinsic.Control.If(V.Global.bEdit)
			V.Local.iRowIndex.Set(V.Args.RowIndex)
			V.Local.iSort.Set(V.DataTable.dtWC(V.Local.iRowIndex).Sort!FieldValLong)
			
			'Have to get the next row
			V.Local.sWC.Set(V.DataTable.dtWC(V.Local.iRowIndex).WC!FieldValTrim)
			F.Intrinsic.String.Build("WC = '{0}' and SORT > {1}", V.Local.sWC, V.Local.iSort, V.Local.sSelect)
			F.Data.DataTable.Select("dtWC", V.Local.sSelect, V.Local.sDTRet)
			
			F.Intrinsic.Control.If(V.Local.sDTRet.IsNoReturn)
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.String.Split(V.Local.sDTRet, "*!*", V.Local.sDTRet)
			V.Local.iOtherRowIndex.Set(V.Local.sDTRet(0))
			V.Local.iOtherSort.Set(V.DataTable.dtWC(V.Local.iOtherRowIndex).SORT!FieldValLong)
			
			V.Local.iTemp.Set(V.Local.iSort)
			V.Local.iSort.Set(V.Local.iOtherSort)
			V.Local.iOtherSort.Set(V.Local.iTemp)
			
			F.Data.DataTable.SetValue("dtWC", V.Local.iRowIndex, "Sort", V.Local.iSort)
			
			F.Data.DataTable.SetValue("dtWC", V.Local.iOtherRowIndex, "Sort", V.Local.iOtherSort)
			
			F.Intrinsic.Control.CallSub(AddModifiedWC, "WC", V.DataTable.dtWC(V.Local.iRowIndex).WC!FieldValTrim)
			F.Intrinsic.Control.CallSub(AddModifiedWC, "WC", V.DataTable.dtWC(V.Local.iOtherRowIndex).WC!FieldValTrim)
			F.Intrinsic.Control.CallSub(SaveModifiedWCSort)
		F.Intrinsic.Control.EndIf
		
F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCWC_RowCellClick.End

Program.Sub.GsGCWC_CellValueChanged.Start
F.Intrinsic.Control.Try

V.Local.sPriority.Declare
V.Local.sNewPriority.Declare
V.Local.sWC.Declare
V.Local.sNewWC.Declare
V.Local.dDueDate.Declare
V.Local.dNewDueDate.Declare
V.Local.sSelect.Declare(String)
V.Local.sDTRet.Declare(String)
V.Local.iIndex.Declare(Long)
V.Local.sTemp.Declare(String)
V.Local.sFilter.Declare(String)

F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("PRIORITY2")
		Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","PRIORITY",V.Args.RowIndex,V.Local.sPriority)
		F.Intrinsic.String.Format(V.Args.Value,"000",V.Local.sNewPriority)
		F.Intrinsic.String.Right(V.Local.sNewPriority,3,V.Local.sNewPriority)
		F.Data.DataTable.SetValue("dtWC",V.Args.RowIndex,"PRIORITY2",V.Local.sNewPriority)
		F.Intrinsic.Control.If(V.Local.sNewPriority.Trim,<>,V.Local.sPriority.Trim)
			F.Data.DataTable.SetValue("dtWC",V.Args.RowIndex,"Sel",True)
		F.Intrinsic.Control.Else
			F.Data.DataTable.SetValue("dtWC",V.Args.RowIndex,"Sel",False)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Case("NEWWC")
		Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","WC",V.Args.RowIndex,V.Local.sWC)
		V.Local.sNewWC.Set(V.Args.Value)
		F.Intrinsic.Control.If(V.Local.sNewWC.Trim,<>,V.Local.sWC.Trim)
			F.Data.DataTable.SetValue("dtWC",V.Args.RowIndex,"Sel",True)
		F.Intrinsic.Control.Else
			F.Data.DataTable.SetValue("dtWC",V.Args.RowIndex,"Sel",False)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Case("DATE_DUE2")
		Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","DATE_DUE",V.Args.RowIndex,V.Local.dDueDate)
		V.Local.dNewDueDate.Set(V.Args.Value)
		F.Intrinsic.Control.If(V.Local.dNewDueDate,<>,V.Local.dDueDate)
			F.Data.DataTable.SetValue("dtWC",V.Args.RowIndex,"Sel",True)
		F.Intrinsic.Control.Else
			F.Data.DataTable.SetValue("dtWC",V.Args.RowIndex,"Sel",False)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.CaseElse
		F.Intrinsic.Control.If(V.Args.Column.UCase, !=, "SEL")
			F.Intrinsic.Control.CallSub(SaveValue, "COLUMN", V.Args.COLUMN, "VALUE", V.Args.Value, "INDEX", V.Args.ROWINDEX)
		F.Intrinsic.Control.EndIf
		
F.Intrinsic.Control.EndSelect

F.Intrinsic.String.Build("Row = {0}", V.Args.RowIndex, V.Local.sSelect)
F.Data.DataTable.Select("dtModifiedRecords", V.Local.sSelect, V.Local.sDTRet)

F.Intrinsic.Control.If(V.Local.sDTRet.IsNoReturn)
	F.Data.DataTable.AddRow("dtModifiedRecords", "Row", V.Args.RowIndex)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCWC_CellValueChanged.End

Program.Sub.AddModifiedWC.Start
F.Intrinsic.Control.Try

V.Local.bInString.Declare(Boolean)
V.Local.sSubString.Declare(String)

V.Local.sSubstring.Set(V.Args.WC)
F.Intrinsic.String.IsInString(V.Global.sModifiedWCs, V.Local.sSubString, "True", V.Local.bInString)
F.Intrinsic.Control.If(V.Local.bInString.Not)
	F.Intrinsic.Control.If(V.Global.sModifiedWCs.Trim, =, "")
		V.Global.sModifiedWCs.Set(V.Local.sSubString)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}*!*{1}", V.Global.sModifiedWCs, V.Local.sSubString, V.Global.sModifiedWCs)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.AddModifiedWC.End

Program.Sub.SaveModifiedWCSort.Start
F.Intrinsic.Control.Try

V.Local.iCounter.Declare(Long)
V.Local.sFilter.Declare(String)
V.Local.sWCList.Declare(String)

F.Intrinsic.Control.If(V.Global.sModifiedWCs.Trim, =, "")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Split(V.Global.sModifiedWCs, "*!*", V.Local.sWCList)
F.Data.DataView.Create("dtWC", "dvWC", 22)
F.Intrinsic.Control.For(V.Local.iCounter, 0, V.Local.sWCList.UBound, 1)
	F.Intrinsic.String.Build("WC = '{0}'", V.Local.sWCList(V.Local.iCounter), V.Local.sFilter)
	F.Data.DataView.SetFilter("dtWC", "dvWC", V.Local.sFilter)
	F.Data.DataView.SetValue("dtWC", "dvWC", -1, "UNSORTED", False)
	F.Data.DataView.ToDataTable("dtWC", "dvWC", "dtSave")
	F.Data.DataTable.SaveToDB("dtSave", "Con", "GCG_5715_Columns", "JOB*!*SFX*!*SEQ", 256, "JOB@!@JOB*!*SFX@!@SUFFIX*!*SEQ@!@SEQ*!*SORT@!@ORDER_SORT")
	F.Data.DataTable.Close("dtSave")
F.Intrinsic.Control.Next(V.Local.iCounter)
F.Data.DataView.Close("dtWC", "dvWC")

V.Global.sModifiedWCs.Set("")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.SaveModifiedWCSort.End

Program.Sub.ResetSerialization.Start
F.Intrinsic.Control.Try

V.Local.sSQL.Declare(String)
V.Local.iUserID.Declare(Long)
V.Local.sREGID.Declare(String)

V.Local.sREGID.Set(V.Args.REGID.Trim)

F.Global.Security.GetUserId(V.Caller.User, V.Caller.CompanyCode, V.Local.iUserID)
F.Intrinsic.String.Build("delete from GS_REGISTRY where REG_ID = '{0}' and USER_ID = {1}", V.Local.sREGID, V.Local.iUserID, V.Local.sSQL)

F.ODBC.Connection!Comm.OpenCommonConnection
F.ODBC.Connection!Comm.Execute(V.Local.sSQL)
F.ODBC.Connection!Comm.Close

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.ResetSerialization.End

Program.Sub.Serialize.Start
F.Intrinsic.Control.Try

V.Local.sSerialize.Declare(String)
V.Local.sForm.Declare(String)
V.Local.sGridControl.Declare(String)
V.Local.sGridView.Declare(String)
V.Local.sREGID.Declare(String)

V.Local.sForm.Set(V.Args.Form.Trim)
V.Local.sGridControl.Set(V.Args.GridControl.Trim)
V.Local.sGridView.Set(V.Args.GridView.Trim)
V.Local.sREGID.Set(V.Args.REGID.Trim)

GUI.[V.Local.sForm].[V.Local.sGridControl].Serialize(V.Local.sGridView, V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, False, "Serialize", False, 0, -999.0 , 1/1/1980, 12:00:00 AM, V.Local.sSerialize)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.Try

V.Local.sSerialize.Declare(String)
V.Local.sForm.Declare(String)
V.Local.sGridControl.Declare(String)
V.Local.sGridView.Declare(String)
V.Local.sREGID.Declare(String)

V.Local.sForm.Set(V.Args.Form.Trim)
V.Local.sGridControl.Set(V.Args.GridControl.Trim)
V.Local.sGridView.Set(V.Args.GridView.Trim)
V.Local.sREGID.Set(V.Args.REGID.Trim)

F.Global.Registry.ReadValue(V.Caller.User, V.Caller.CompanyCode, V.Local.sGridView, V.Local.sREGID, 1000, 6, "", V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
	Gui.[V.Local.sForm].[V.Local.sGridControl].Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.LoadJobs.Start
F.Intrinsic.Control.Try

V.Local.sSQL.Declare
V.Local.sRet.Declare
V.Local.iCnt.Declare
V.Local.sJob.Declare
V.Local.sSuffix.Declare
V.Local.sSeq.Declare
V.Local.sPrevSeq.Declare
V.Local.fPrevQty.Declare
V.Local.sPrevClsd.Declare
V.Local.sSelect.Declare(String)
V.Local.sClosed.Declare(String)
V.Local.sFilter.Declare(String, "")
V.Local.sJobFilter.Declare(String, "")

Gui.frmResched.lblStatus.Caption("Loading Work Orders....")
Gui.frmResched.lblStatus.Visible(True)
GUI.frmResched.pbStatus.Value(0)
Gui.frmResched.pbStatus.Visible(True)

F.Intrinsic.Control.If(V.Global.bRefreshModified)
	F.Data.DataView.Create("dtRescheduled", "dvFilter", 22)
	F.Data.DataView.ToString("dtRescheduled", "dvFilter", "JOB*!*SUFFIX", "", "','", V.Local.sFilter)
	
	'delete rescheduled jobs
	F.Intrinsic.String.Build("JOBSUFF not in ('{0}')", V.Local.sFilter, V.Local.sJobFilter)
	F.Data.DataView.Create("dtWC", "dvWCDelete", 22, V.Local.sJobFilter, "")
	F.Data.DataView.ToDataTable("dtWC", "dvWCDelete", "dtWCTemp", True)
	F.Data.DataView.Close("dtWC", "dvWCDelete")
	F.Data.DataTable.Close("dtWC")
	
	F.Data.DataView.Create("dtWCTemp", "dvWCTemp", 22)
	F.Data.DataView.ToDataTable("dtWCTemp", "dvWCTemp", "dtWC", True)
	F.Data.DataView.Close("dtWCTemp", "dvWCTemp")
	F.Data.DataTable.Close("dtWCTemp")
	
	F.Data.DataView.Close("dtRescheduled", "dvFilter")
	
	F.Intrinsic.String.Build(" and JOBSUFF in ('{0}')", V.Local.sFilter, V.Local.sFilter)
	
	F.Data.DataTable.DeleteRow("dtRescheduled")
	F.Data.DataTable.AcceptChanges("dtRescheduled")
F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.DataTable.dtWC.Exists)
		F.Data.DataTable.Close("dtWC")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'V.Local.sSQL.Set("SELECT CONVERT(0,SQL_BIT) AS Sel,IF(A.SFX = '',A.JOB,A.JOB + '-' + A.SFX) AS WO,RTRIM(B.PRIORITY) AS PRIORITY2,RTRIM(A.SEQ) as SEQ,RTRIM(SeqRes) AS WC,'' AS NewWC,(SELECT WC_DEPT FROM WORKCENTERS WHERE A.SEQRES = WORKCENTERS.MACHINE) AS DEPT,RTRIM(COALESCE(B.PART,'')) AS PART,'' As DISPLAY_PART,RTRIM(B.PART_DESCRIPTION) as PART_DESCRIPTION,A.STARTDATE,A.DUEDATE,B.DATE_DUE AS DATE_DUE2,B.SCHEDULED_DUE_DATE AS SCHED_DATE,IF(PCSTOPROD = 0, 0,(A.INITSU+A.HOURSORIG)) AS EST_HRS, HOURSAPPL AS ACT_HRS,IF(A.INITSU+A.HOURSORIG = 0,0,(A.INITSU+A.HOURSORIG)- HOURSAPPL) AS REM_HRS,A.PCSTOPROD AS EST_QTY,A.PCSREMAIN AS REM_QTY,CONVERT(0,SQL_FLOAT) AS PrevQty,RTRIM(A.JOB) as JOB,RTRIM(A.SFX) as SFX,RTRIM(B.PRIORITY) as PRIORITY,B.DATE_START,B.DATE_DUE,'' AS PrevSeq,'' AS PrevClsd, RTRIM(B.CUSTOMER) as CUSTOMER, RTRIM(B.CUSTOMER_PO) as CUSTOMER_PO, RTRIM(B.LOCATION) as LOC, Concat(B.JOB, B.SUFFIX) as JOBSUFF, CONVERT(0,SQL_BIT) as MAT, DATE_ORIG_DUE, Cast(IF(RTRIM(FLAG_WO_RELEASED) = 'Y', 1, 0) as Bit) RELEASED,CASE WHEN B.PARENT_WO = '' THEN '' ELSE IF(B.PARENT_SUFFIX_PARENT = '',B.PARENT_WO,B.PARENT_WO + '-' + B.PARENT_SUFFIX_PARENT) END AS PARENT_WO,RTRIM(B.PARENT_WO + B.PARENT_SUFFIX_PARENT) AS PARENTJOBSUFF,CASE WHEN B.PARENT_WO = '' THEN '' ELSE IF(B.PARENT_SUFFIX_PARENT = '',B.PARENT_WO,B.PARENT_WO + '-' + '000') END AS TOP_PARENT_WO,RTRIM(B.PARENT_WO + '000') AS TOPPARENTJOBSUFF, RTRIM(NOTES) NOTES, IsNull(ORDER_SORT, '9999') ORIGINAL_SORT, Cast(IF(IsNull(ORDER_SORT, '9999') = '9999', 1, 0) as BIT) UNSORTED FROM APSV3_JBLINES A LEFT JOIN V_JOB_HEADER B ON A.JOB = B.JOB AND A.SFX = B.SUFFIX left join GCG_5715_COLUMNS C on A.JOB = C.JOB and A.SFX = C.SUFFIX and A.SEQ = C.SEQ WHERE A.SEQTYPE = '1' AND A.COMPLDATE IS NULL AND A.JOBTYPE <> 2 AND WC IS NOT NULL AND B.DATE_CLOSED = '1900-01-01'{0} ORDER BY A.STARTDATE,A.JOB,A.SFX,A.SEQ;")
V.Local.sSQL.Set("SELECT CONVERT(0,SQL_BIT) AS Sel,IF(A.SFX = '',A.JOB,A.JOB + '-' + A.SFX) AS WO,RTRIM(B.PRIORITY) AS PRIORITY2,RTRIM(A.SEQ) as SEQ,RTRIM((SELECT TOP 1 SAR FROM APSV3_UBDETAIL WHERE A.JSS = APSV3_UBDETAIL.JSS)) AS WC, RTRIM(SeqRes) as SCHEDULED_WC,'' AS NewWC, (SELECT WC_DEPT FROM WORKCENTERS WHERE A.SEQRES = WORKCENTERS.MACHINE) AS DEPT,RTRIM(COALESCE(B.PART,'')) AS PART,'' As DISPLAY_PART,RTRIM(B.PART_DESCRIPTION) as PART_DESCRIPTION,A.STARTDATE,A.DUEDATE,B.DATE_DUE AS DATE_DUE2,B.SCHEDULED_DUE_DATE AS SCHED_DATE,IF(PCSTOPROD = 0, 0,(A.INITSU+A.HOURSORIG)) AS EST_HRS, HOURSAPPL AS ACT_HRS,IF(A.INITSU+A.HOURSORIG = 0,0,(A.INITSU+A.HOURSORIG)- HOURSAPPL) AS REM_HRS,A.PCSTOPROD AS EST_QTY,A.PCSREMAIN AS REM_QTY,CONVERT(0,SQL_FLOAT) AS PrevQty,RTRIM(A.JOB) as JOB,RTRIM(A.SFX) as SFX,RTRIM(B.PRIORITY) as PRIORITY,B.DATE_START,B.DATE_DUE,'' AS PrevSeq,'' AS PrevClsd, RTRIM(B.CUSTOMER) as CUSTOMER, RTRIM(B.CUSTOMER_PO) as CUSTOMER_PO, RTRIM(B.LOCATION) as LOC, Concat(B.JOB, B.SUFFIX) as JOBSUFF, CONVERT(0,SQL_BIT) as MAT, DATE_ORIG_DUE, Cast(IF(RTRIM(FLAG_WO_RELEASED) = 'Y', 1, 0) as Bit) RELEASED,CASE WHEN B.PARENT_WO = '' THEN '' ELSE IF(B.PARENT_SUFFIX_PARENT = '',B.PARENT_WO,B.PARENT_WO + '-' + B.PARENT_SUFFIX_PARENT) END AS PARENT_WO,RTRIM(B.PARENT_WO + B.PARENT_SUFFIX_PARENT) AS PARENTJOBSUFF,CASE WHEN B.PARENT_WO = '' THEN '' ELSE IF(B.PARENT_SUFFIX_PARENT = '',B.PARENT_WO,B.PARENT_WO + '-' + '000') END AS TOP_PARENT_WO,RTRIM(B.PARENT_WO + '000') AS TOPPARENTJOBSUFF, RTRIM(NOTES) NOTES, IsNull(ORDER_SORT, '9999') ORIGINAL_SORT, Cast(IF(IsNull(ORDER_SORT, '9999') = '9999', 1, 0) as BIT) UNSORTED, RTRIM(JSS) APS_JSS FROM APSV3_JBLINES A LEFT JOIN V_JOB_HEADER B ON A.JOB = B.JOB AND A.SFX = B.SUFFIX left join GCG_5715_COLUMNS C on A.JOB = C.JOB and A.SFX = C.SUFFIX and A.SEQ = C.SEQ WHERE A.SEQTYPE = '1' AND A.COMPLDATE IS NULL AND A.JOBTYPE <> 2 AND WC IS NOT NULL AND B.DATE_CLOSED = '1900-01-01'{0} ORDER BY A.STARTDATE,A.JOB,A.SFX,A.SEQ;")
F.Intrinsic.String.Build(V.Local.sSQL, V.Local.sFilter, V.Local.sSQL)

F.Data.DataTable.CreateFromSQL("dtWCBase","con",V.Local.sSQL,True)

GUI.frmResched.lblStatus.Caption("Loading extra columns....")

F.Data.DataTable.AddColumn("dtWCBase", "Sort", "Long")
F.Data.DataTable.AddColumn("dtWCBase", "Parent_Part", "String")
F.Data.DataTable.AddColumn("dtWCBase", "Parent_Desc", "String")
F.Data.DataTable.AddColumn("dtWCBase", "Top_Parent_Part", "String")
F.Data.DataTable.AddColumn("dtWCBase", "Top_Parent_Desc", "String")
F.Data.DataTable.AddColumn("dtWCBase", "Top_Parent_Due", "String")

'get customer names
'F.Intrinsic.Control.CallSub(GetFilter, "DataTable", "dtWCBase", "Field", "CUSTOMER")
'F.Intrinsic.String.Build("select RTRIM(CUSTOMER) as Customer, RTRIM(NAME_CUSTOMER) as Name from V_Customer_Master where CUSTOMER in ('{0}')", V.Args.Filter, V.Local.sSQL)
V.Local.sSQL.Set("select RTRIM(CUSTOMER) as Customer, RTRIM(NAME_CUSTOMER) as Name from V_Customer_Master")
F.Data.Dictionary.CreateFromSQL("dictCustomers", "Con", V.Local.sSQL)
F.Data.Dictionary.SetDefaultReturn("dictCustomers", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictCustomers", "CUSTOMER")
F.Data.Dictionary.Close("dictCustomers")

'get if the first (or a) material sequence has been closed
'F.Intrinsic.Control.CallSub(GetFilter, "DataTable", "dtWCBase", "Field", "JOBSUFF")
'F.Intrinsic.String.Build("select concat(Job, SUFFIX) JOBSUFF, 1 as Closed from JOB_OPERATIONS where LMO = 'M' and FLAG_CLOSED = 'Y' and JOBSUFF in ('{0}') group by JOB, SUFFIX order by JOB, Suffix", V.Args.Filter, V.Local.sSQL)
V.Local.sSQL.Set("select concat(Job, SUFFIX) JOBSUFF, 1 as Closed from JOB_OPERATIONS where LMO = 'M' and FLAG_CLOSED = 'Y' group by JOB, SUFFIX order by JOB, Suffix")
F.Data.Dictionary.CreateFromSQL("dictTemp", "con", V.Local.sSQL)
F.Data.Dictionary.SetDefaultReturn("dictTemp", False)
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictTemp", "JOBSUFF", "MAT")
F.Data.Dictionary.Close("dictTemp")

'get top material
'F.Intrinsic.String.Build("select concat(Job, SUFFIX) JOBSUFF, RTRIM(PART) from JOB_OPERATIONS where LMO = 'M' and JOBSUFF in ('{0}') order by JOB, Suffix, Seq", V.Args.Filter, V.Local.sSQL)
V.Local.sSQL.Set("select concat(Job, SUFFIX) JOBSUFF, RTRIM(PART) from JOB_OPERATIONS where LMO = 'M' order by JOB, Suffix, Seq")
F.Data.Dictionary.CreateFromSQL("dictTemp", "con", V.Local.sSQL)
F.Data.Dictionary.SetDefaultReturn("dictTemp", False)
F.Data.DataTable.AddColumn("dtWCBase", "TOP_MATERIAL_SEQUENCE", "String", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictTemp", "JOBSUFF", "TOP_MATERIAL_SEQUENCE")
F.Data.Dictionary.Close("dictTemp")

'get parent part
'F.Intrinsic.Control.CallSub(GetFilter, "DataTable", "dtWCBase", "Field", "PARENTJOBSUFF")
'F.Intrinsic.String.Build("select RTRIM(JOB+SUFFIX) AS PARENTJOBSUFF, RTRIM(PART) AS Parent_Part from V_JOB_HEADER where PARENTJOBSUFF in ('{0}')", V.Args.Filter, V.Local.sSQL)
V.Local.sSQL.Set("select RTRIM(JOB+SUFFIX) AS PARENTJOBSUFF, RTRIM(PART) AS Parent_Part from V_JOB_HEADER")
F.Data.Dictionary.CreateFromSQL("dictParentPart", "con", V.Local.sSQL)
F.Data.Dictionary.SetDefaultReturn("dictParentPart", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictParentPart", "ParentJOBSUFF", "Parent_Part")
F.Data.Dictionary.Close("dictParentPart")

'get parent desc
'F.Intrinsic.String.Build("select RTRIM(JOB+SUFFIX) AS PARENTJOBSUFF, RTRIM(DESCRIPTION) AS PARENT_DESC from V_JOB_HEADER where PARENTJOBSUFF in ('{0}')", V.Args.Filter, V.Local.sSelect)
V.Local.sSQL.Set("select RTRIM(JOB+SUFFIX) AS PARENTJOBSUFF, RTRIM(DESCRIPTION) AS PARENT_DESC from V_JOB_HEADER")
F.Data.Dictionary.CreateFromSQL("dictParentPart", "con", V.Local.sSQL)
F.Data.Dictionary.SetDefaultReturn("dictParentPart", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictParentPart", "ParentJOBSUFF", "Parent_Desc")
F.Data.Dictionary.Close("dictParentPart")

'get top parent part
'F.Intrinsic.Control.CallSub(GetFilter, "DataTable", "dtWCBase", "Field", "TOPPARENTJOBSUFF")
'F.Intrinsic.String.Build("select RTRIM(JOB+SUFFIX) AS TOPPARENTJOBSUFF, RTRIM(PART) AS Top_Parent_Part from V_JOB_HEADER where TOPPARENTJOBSUFF in ('{0}')", V.Args.Filter, V.Local.sSQL)
V.Local.sSQL.Set("select RTRIM(JOB+SUFFIX) AS TOPPARENTJOBSUFF, RTRIM(PART) AS Top_Parent_Part from V_JOB_HEADER")
F.Data.Dictionary.CreateFromSQL("dictTopParentPart", "con", V.Local.sSQL)
F.Data.Dictionary.SetDefaultReturn("dictTopParentPart", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictTopParentPart", "TopParentJOBSUFF", "Top_Parent_Part")
F.Data.Dictionary.Close("dictTopParentPart")

'get top parent desc
'F.Intrinsic.String.Build("select RTRIM(JOB+SUFFIX) AS TOPPARENTJOBSUFF, RTRIM(DESCRIPTION) AS TOP_PARENT_DESC from V_JOB_HEADER where TOPPARENTJOBSUFF in ('{0}')", V.Args.Filter, V.Local.sSQL)
V.Local.sSQL.Set("select RTRIM(JOB+SUFFIX) AS TOPPARENTJOBSUFF, RTRIM(DESCRIPTION) AS TOP_PARENT_DESC from V_JOB_HEADER")
F.Data.Dictionary.CreateFromSQL("dictTopParentPart", "con", V.Local.sSQL)
F.Data.Dictionary.SetDefaultReturn("dictTopParentPart", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictTopParentPart", "TopParentJOBSUFF", "Top_Parent_Desc")
F.Data.Dictionary.Close("dictTopParentPart")

'get top parent due date
'F.Intrinsic.String.Build("select RTRIM(JOB+SUFFIX) AS TOPPARENTJOBSUFF, DATE_DUE AS TOP_PARENT_DUE from V_JOB_HEADER where TOPPARENTJOBSUFF in ('{0}')", V.Args.Filter, V.Local.sSQL)
V.Local.sSQL.Set("select RTRIM(JOB+SUFFIX) AS TOPPARENTJOBSUFF, DATE_DUE AS TOP_PARENT_DUE from V_JOB_HEADER")
F.Data.Dictionary.CreateFromSQL("dictTopParentPart", "con", V.Local.sSQL)
F.Data.Dictionary.SetDefaultReturn("dictTopParentPart", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictTopParentPart", "TopParentJOBSUFF", "Top_Parent_Due")
F.Data.Dictionary.Close("dictTopParentPart")

F.Data.DataTable.AddColumn("dtWCBase", "UP", "String")
F.Data.DataTable.AddColumn("dtWCBase", "DOWN", "String")

F.Data.DataTable.AddDisplayPartColumn("dtWCBase",0,"PART","DISPLAY_PART")

'load WC descriptions
F.Data.Dictionary.CreateFromSQL("dictTemp", "Con", "select RTRIM(MACHINE), RTRIM(WC_NAME) from V_WORKCENTERS union select RTRIM(WORK_GROUP), RTRIM(DESCR) from V_WORKGROUP_HEAD")
F.Data.Dictionary.SetDefaultReturn("dictTemp", "")
F.Data.DataTable.AddColumn("dtWCBase", "WORKCENTER_DESCRIPTION", "String", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictTemp", "WC", "WORKCENTER_DESCRIPTION")
F.Data.Dictionary.Close("dictTemp")

F.Data.DataTable.AddExpressionColumn("dtWCBase", "WORKCENTER_GROUP_HEADER", "String", "Trim(WC) + ' - ' + TRIM(WORKCENTER_DESCRIPTION)")

'load inventory sort code
'F.Intrinsic.Control.CallSub(GetFilter, "DataTable", "dtWCBase", "Field", "Part")
'F.Intrinsic.String.Build("select RTRIM(PART), RTRIM(CODE_SORT) from V_INVENTORY_MSTR where PART in ('{0}')", V.Args.Filter, V.Local.sSQL)
V.Local.sSQL.Set("select RTRIM(PART), RTRIM(CODE_SORT) from V_INVENTORY_MSTR")
F.Data.Dictionary.CreateFromSQL("dictTemp", "Con", V.Local.sSQL)
F.Data.Dictionary.SetDefaultReturn("dictTemp", "")
F.Data.DataTable.AddColumn("dtWCBase", "SORT_CODE", "String", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictTemp", "PART", "SORT_CODE")
F.Data.Dictionary.Close("dictTemp")

GUI.frmResched.lblStatus.Caption("Calculating previous sequence info....")

F.Intrinsic.Control.CallSub(GetPreviousSequenceInfo)
F.Intrinsic.Control.CallSub(CheckSetupOnTime)

GUI.frmResched.lblStatus.Caption("Setting up grid....")

'create main dtWC that is used everywhere else
F.Intrinsic.Control.If(V.Global.bRefreshModified)
	V.Global.bRefreshModified.Set(False)
	F.Data.DataTable.Merge("dtWCBase", "dtWC", True, 3)
	F.Data.DataTable.AcceptChanges("dtWC")
F.Intrinsic.Control.Else
	F.Data.DataView.Create("dtWCBase", "dvFinal", 22)
	F.Data.DataView.ToDataTable("dtWCBase", "dvFinal", "dtWC", True)
	F.Data.DataView.Close("dtWCBase", "dvFinal")
F.Intrinsic.Control.EndIf
F.Data.DataTable.Close("dtWCBase")

F.Intrinsic.Control.CallSub(loadgvwc)

Gui.frmResched.lblStatus.Visible(False)
Gui.frmResched.pbStatus.Visible(False)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadJobs.End

Program.Sub.GetPreviousSequenceInfo.Start
F.Intrinsic.Control.Try

V.Local.sFilter.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.iCnt.Declare(Long)
V.Local.sJob.Declare(String)
V.Local.sSuffix.Declare(String)
V.Local.sSeq.Declare(String)
V.Local.sSelect.Declare(String)
V.Local.sPrevSeq.Declare(String)
V.Local.fPrevQty.Declare(String)
V.Local.sPrevClsd.Declare(String)
V.Local.iMax.Declare(Long)

F.Data.DataView.Create("dtWCBase", "dvString", 22)
F.Data.DataView.ToDataTableDistinct("dtWCBase", "dvString", "dtString", "JOB*!*SFX")
F.Data.DataView.Close("dtWCBase", "dvString")
F.Data.DataView.Create("dtString", "dvString", 22)
F.Data.DataView.ToString("dtString", "dvString", "JOB*!*SFX", "-", "','", V.Local.sFilter)
F.Data.DataView.Close("dtString", "dvString")
F.Data.DataTable.Close("dtString")

'get job information
'F.Intrinsic.String.Build("SELECT JOB, SUFFIX, SEQ, RTRIM(JOB)+'-'+RTRIM(SUFFIX)+'-'+RTRIM(SEQ) as JSS, RTRIM(JOB)+'-'+RTRIM(SUFFIX) JS, UNITS_COMPLETE, UNITS_SCRAP, FLAG_CLOSED, RTRIM(OPERATION) as OPERATION, UNITS as RUNTIME, RTRIM(PART) as WC FROM V_JOB_OPERATIONS WHERE (LMO = 'L' or LMO = 'O') and JOB + '-' + SUFFIX in ('{0}') ORDER BY JOB desc, SUFFIX desc, SEQ DESC", V.Local.sFilter, V.Local.sSQL)
'F.Intrinsic.String.Build("SELECT A.JOB, A.SUFFIX, A.SEQ, RTRIM(A.JOB)+'-'+RTRIM(A.SUFFIX)+'-'+RTRIM(A.SEQ) as JSS, RTRIM(A.JOB)+'-'+RTRIM(A.SUFFIX) JS, A.UNITS_COMPLETE, A.UNITS_SCRAP, A.FLAG_CLOSED, RTRIM(A.OPERATION) as OPERATION, A.UNITS as RUNTIME, RTRIM(A.PART) as WC FROM V_JOB_OPERATIONS A WHERE (A.LMO = 'L' or A.LMO = 'O') and A.JOB + '-' + A.SUFFIX in ('{0}') ORDER BY JSS", V.Local.sFilter, V.Local.sSQL)

V.Local.sSQL.Set("SELECT A.JOB, A.SUFFIX, A.SEQ, RTRIM(A.JOB)+'-'+RTRIM(A.SUFFIX)+'-'+RTRIM(A.SEQ) as JSS, RTRIM(A.JOB)+'-'+RTRIM(A.SUFFIX) JS, A.UNITS_COMPLETE, A.UNITS_SCRAP, A.FLAG_CLOSED, RTRIM(A.OPERATION) as OPERATION, A.UNITS as RUNTIME, RTRIM(A.PART) as WC FROM V_JOB_OPERATIONS A left join V_JOB_HEADER C on A.JOB = C.JOB and A.SUFFIX = C.SUFFIX WHERE (A.LMO = 'L' or A.LMO = 'O') and C.DATE_CLOSED = '1900-01-01' ORDER BY JSS")

F.Data.DataTable.CreateFromSQL("dtPrevSeq", "Con", V.Local.sSQL)

'F.Data.DataTable.AddColumn("dtPrevSeq", "LABOR_INDEX", "Long")
F.Data.DataTable.AddColumn("dtPrevSeq", "OUTSIDE_COMPLETE", "Float")

'get outside sequence units complete
F.Intrinsic.String.Build("select RTRIM(JOB)+'-'+RTRIM(SUFFIX)+'-'+RTRIM(SEQ) as JSS, SUM(HOURS_WORKED) as HOURS_WORKED from V_JOB_DETAIL where LMO = 'O' and JOB + '-' + SUFFIX in ('{0}') group by JOB, SUFFIX, SEQ", V.Local.sFilter, V.Local.sSQL)
F.Data.Dictionary.CreateFromSQL("dictOutside", "Con", V.Local.sSQL)
F.Data.Dictionary.SetDefaultReturn("dictOutside", 0)
F.Data.DataTable.FillFromDictionary("dtPrevSeq", "dictOutside", "JSS", "OUTSIDE_COMPLETE")
F.Data.Dictionary.Close("dictOutside")
F.Data.DataTable.AddExpressionColumn("dtPrevSeq", "COMPLETE", "Float", "[OUTSIDE_COMPLETE] + [UNITS_COMPLETE]")

'F.Data.DataView.Create("dtPrevSeq", "dvLaborIndex", 22, "", "SEQ")
'F.Data.DataView.ToDataTableDistinct("dtPrevSeq", "dvLaborIndex", "dtDistinctJobs", "JOB*!*SUFFIX")

''create labor index (index of labor operation on job)
'GUI.frmResched.pbStatus.Min(0)
'V.Local.iMax.Set(V.DataTable.dtDistinctJobs.RowCount)
'GUI.frmResched.pbStatus.Max(V.Local.iMax.++)
'F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtDistinctJobs.RowCount--, 1)
'	Gui.frmResched.pbStatus.Value(V.Local.iCnt)
'	F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'", V.DataTable.dtDistinctJobs(V.Local.iCnt).JOB!FieldValTrim, V.DataTable.dtDistinctJobs(V.Local.iCnt).SUFFIX!FieldValTrim, V.Local.sSelect)
'	F.Data.DataView.SetFilter("dtPrevSeq", "dvLaborIndex", V.Local.sSelect)
'	F.Data.DataView.SetSeries("dtPrevSeq", "dvLaborIndex", "LABOR_INDEX", 0, 1)
'F.Intrinsic.Control.Next(V.Local.iCnt)
'F.Data.DataView.Close("dtPrevSeq", "dvLaborIndex")
'F.Data.DataTable.Close("dtDistinctJobs")

'TESTING 2020-10-20
'F.Data.DataView.Create("dtPrevSeq", "dvLaborIndex", 22, "", "JSS")
'F.Data.DataView.ToDataTable("dtPrevSeq", "dvLaborIndex", "dtLaborIndex")
'F.Data.DataView.Close("dtPrevSeq", "dvLaborIndex")

F.Data.DataTable.AddColumn("dtPrevSeq", "PREVIOUS_LABOR_INDEX", "Long", -1)
F.Data.DataTable.AddExpressionColumn("dtPrevSeq", "LABOR_INDEX", "Long", "PREVIOUS_LABOR_INDEX + 1")
F.Data.DataTable.SetValueOnNextLine("dtPrevSeq", "LABOR_INDEX", "PREVIOUS_LABOR_INDEX", "JS")

'F.Data.Dictionary.CreateFromDataTable("dictLaborIndex", "dtPrevSeq", "JSS", "LABOR_INDEX")
'F.Data.Dictionary.SetDefaultReturn("dictLaborIndex", -2)
'F.Data.DataTable.AddColumn("dtLaborIndex", "OLD_LABOR_INDEX", "Long")
'F.Data.DataTable.FillFromDictionary("dtLaborIndex", "dictLaborIndex", "JSS", "OLD_LABOR_INDEX")
'F.Data.Dictionary.Close("dictLaborIndex")
'F.Data.DataTable.AddExpressionColumn("dtLaborIndex", "LABOR_INDEX_DIFFERENCE", "BOOLEAN", "IIF(NEW_LABOR_INDEX = OLD_LABOR_INDEX, 1, 0)")

'fill labor index
F.Data.Dictionary.CreateFromDataTable("dictLaborIndex", "dtPrevSeq", "JSS", "LABOR_INDEX")
F.Data.Dictionary.SetDefaultReturn("dictLaborIndex", -2)
F.Data.DataTable.AddColumn("dtWCBase", "LABOR_INDEX", "Long")
F.Data.DataTable.AddColumn("dtWCBase", "Seq_Format", "String")
F.Data.DataTable.SetValueFormat("dtWCBase", -1, "SEQ", "Seq_Format", "000000")
F.Data.DataTable.AddExpressionColumn("dtWCBase", "JSS", "String", "TRIM([JOB]) + '-' + TRIM([SFX]) + '-' + TRIM([SEQ_FORMAT])")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictLaborIndex", "JSS", "LABOR_INDEX")
F.Data.Dictionary.Close("dictLaborIndex")

'fill pieces complete
F.Data.Dictionary.CreateFromDataTable("dictUnitsComplete", "dtPrevSeq", "JSS", "COMPLETE")
F.Data.Dictionary.SetDefaultReturn("dictUnitsComplete", 0)
F.Data.DataTable.AddColumn("dtWCBase", "UNITS_COMPLETE", "Float")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictUnitsComplete", "JSS", "UNITS_COMPLETE")
F.Data.Dictionary.Close("dictUnitsComplete")

'fill runtime
F.Data.Dictionary.CreateFromDataTable("dictRuntime", "dtPrevSeq", "JSS", "RUNTIME")
F.Data.Dictionary.SetDefaultReturn("dictRuntime", 0)
F.Data.DataTable.AddColumn("dtWCBase", "RUNTIME", "Float")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictRuntime", "JSS", "RUNTIME")
F.Data.Dictionary.Close("dictRuntime")

'fill scrap
F.Data.Dictionary.CreateFromDataTable("dictScrap", "dtPrevSeq", "JSS", "UNITS_SCRAP")
F.Data.Dictionary.SetDefaultReturn("dictScrap", 0)
F.Data.DataTable.AddColumn("dtWCBase", "UNITS_SCRAP", "Float")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictScrap", "JSS", "UNITS_SCRAP")
F.Data.Dictionary.Close("dictScrap")

'fill operation
F.Data.Dictionary.CreateFromDataTable("dictOP", "dtPrevSeq", "JSS", "Operation")
F.Data.Dictionary.SetDefaultReturn("dictOP", "")
F.Data.DataTable.AddColumn("dtWCBase", "Operation", "String")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictOP", "JSS", "Operation")
F.Data.Dictionary.Close("dictOP")

F.Data.DataTable.AddExpressionColumn("dtWCBase", "PREV_LABOR_INDEX", "Long", "[LABOR_INDEX] - 1")
F.Data.DataTable.AddExpressionColumn("dtWCBase", "NEXT_LABOR_INDEX", "Long", "[LABOR_INDEX] + 1")
F.Data.DataTable.AddExpressionColumn("dtWCBase", "JS", "String", "Trim(JOB) + '-' + TRIM(SFX)")
F.Data.DataTable.AddExpressionColumn("dtWCBase", "JSLaborIndex", "String", "JS + '-' + [LABOR_INDEX]")
F.Data.DataTable.AddExpressionColumn("dtWCBase", "JSPrevLaborIndex", "String", "JS + '-' + [PREV_LABOR_INDEX]")
F.Data.DataTable.AddExpressionColumn("dtWCBase", "JSNextLaborIndex", "String", "JS + '-' + [NEXT_LABOR_INDEX]")
F.Data.DataTable.AddExpressionColumn("dtPrevSeq", "JSLaborIndex", "String", "Trim(JOB) + '-' + TRIM(SUFFIX) + '-' + [LABOR_INDEX]")

'fill previous Operation
F.Data.Dictionary.CreateFromDataTable("dictPrevOP", "dtPrevSeq", "JSLaborIndex", "Operation")
F.Data.Dictionary.SetDefaultReturn("dictPrevOP", "")
F.Data.DataTable.AddColumn("dtWCBase", "PrevOperation", "String")
F.Data.DataTable.AddColumn("dtWCBase", "NEXT_OPERATION", "String")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictPrevOP", "JSPrevLaborIndex", "PrevOperation")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictPrevOP", "JSNextLaborIndex", "NEXT_OPERATION")
F.Data.Dictionary.Close("dictPrevOP")

'fill previous WC
F.Data.Dictionary.CreateFromDataTable("dictWC", "dtPrevSeq", "JSLaborIndex", "WC")
F.Data.Dictionary.SetDefaultReturn("dictWC", "")
F.Data.DataTable.AddColumn("dtWCBase", "PREVIOUS_WC", "String")
F.Data.DataTable.AddColumn("dtWCBase", "NEXT_WC", "String")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictWC", "JSPrevLaborIndex", "PREVIOUS_WC")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictWC", "JSNextLaborIndex", "NEXT_WC")
F.Data.Dictionary.Close("dictWC")

'fill previous sequence
F.Data.Dictionary.CreateFromDataTable("dictPrevSeq", "dtPrevSeq", "JSLaborIndex", "SEQ")
F.Data.Dictionary.SetDefaultReturn("dictPrevSeq", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictPrevSeq", "JSPrevLaborIndex", "PrevSeq")
F.Data.DataTable.AddColumn("dtWCBase", "NEXT_SEQUENCE", "String", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictPrevSeq", "JSNextLaborIndex", "NEXT_SEQUENCE")
F.Data.Dictionary.Close("dictPrevSeq")

'fill previous units complete
F.Data.Dictionary.CreateFromDataTable("dictPrevQty", "dtPrevSeq", "JSLaborIndex", "COMPLETE")
F.Data.Dictionary.SetDefaultReturn("dictPrevQty", 0)
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictPrevQty", "JSPrevLaborIndex", "PrevQty")
F.Data.Dictionary.Close("dictPrevQty")

'fill previous scrap
F.Data.DataTable.AddColumn("dtWCBase", "PREV_UNITS_SCRAP", "Float")
F.Data.Dictionary.CreateFromDataTable("dictPrevScrap", "dtPrevSeq", "JSLaborIndex", "UNITS_SCRAP")
F.Data.Dictionary.SetDefaultReturn("dictPrevScrap", 0)
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictPrevScrap", "JSPrevLaborIndex", "PREV_UNITS_SCRAP")
F.Data.Dictionary.Close("dictPrevScrap")

'fill previous closed
F.Data.Dictionary.CreateFromDataTable("dictPrevClsd", "dtPrevSeq", "JSLaborIndex", "FLAG_CLOSED")
F.Data.Dictionary.SetDefaultReturn("dictPrevClsd", "")
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictPrevClsd", "JSPrevLaborIndex", "PrevClsd")
F.Data.Dictionary.Close("dictPrevClsd")

'fill previous remaining
F.Data.DataTable.AddColumn("dtWCBase", "PREVIOUS_REMAINING_HOURS", "Float", 0)
F.Data.Dictionary.CreateFromDataTable("dictTemp", "dtWCBase", "JSLaborIndex", "REM_HRS")
F.Data.Dictionary.SetDefaultReturn("dictTemp", 0)
F.Data.DataTable.FillFromDictionary("dtWCBase", "dictTemp", "JSPrevLaborIndex", "PREVIOUS_REMAINING_HOURS")
F.Data.Dictionary.Close("dictTemp")

F.Data.DataTable.Close("dtPrevSeq")

F.Data.DataTable.AddExpressionColumn("dtWCBase", "UNITS_OPEN_THIS_PARTIAL", "Float", "IIF([LABOR_INDEX] = 0, 0, IIF([PrevOperation] = 'SETUP', 0, [PrevQty] - ([UNITS_COMPLETE] + [UNITS_SCRAP])))")
F.Data.DataTable.AddExpressionColumn("dtWCBase", "EST_REM_HOURS", "Float", "IIF([RUNTIME] = 0, 0, [REM_QTY] / [RUNTIME])")
F.Data.DataTable.AddExpressionColumn("dtWCBase", "PREVIOUS_SEQUENCE_CLOSED_BOOLEAN", "Boolean", "IIF(IsNull([PrevClsd], '') = 'Y', True, False)")

F.Data.DataTable.RemoveColumn("dtWCBase", "JSPrevLaborIndex")
F.Data.DataTable.RemoveColumn("dtWCBase", "JSNextLaborIndex")
F.Data.DataTable.RemoveColumn("dtWCBase", "JSLaborIndex")
F.Data.DataTable.RemoveColumn("dtWCBase", "JS")
F.Data.DataTable.RemoveColumn("dtWCBase", "PREV_LABOR_INDEX")
F.Data.DataTable.RemoveColumn("dtWCBase", "NEXT_LABOR_INDEX")
F.Data.DataTable.RemoveColumn("dtWCBase", "JSS")
F.Data.DataTable.RemoveColumn("dtWCBase", "SEQ_FORMAT")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GetPreviousSequenceInfo.End

Program.Sub.CheckSetupOnTime.Start
F.Intrinsic.Control.Try

V.Local.iCounter.Declare(String)
V.Local.sFilter.Declare(String)
V.Local.iMax.Declare(Long)

F.Data.DataView.Create("dtWCBase", "dvSetupFormatting", 22)
F.Data.DataView.ToDataTableDistinct("dtWCBase", "dvSetupFormatting", "dtDistinctJobs", "JOB*!*SFX")

F.Data.DataTable.AddColumn("dtWCBase", "LATE", Boolean, False)

GUI.frmResched.pbStatus.Min(0)
V.Local.iMax.Set(V.DataTable.dtDistinctJobs.RowCount)
GUI.frmResched.pbStatus.Max(V.Local.iMax.++)
GUI.frmResched.lblStatus.Text("Checking on time jobs...")

'checking if step was on time here for conditional formatting
F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataTable.dtDistinctJobs.RowCount--, 1)
	Gui.frmResched.pbStatus.Value(V.Local.iCounter)
	
	F.Intrinsic.String.Build("[JOB] = '{0}' and [SFX] = '{1}'", V.DataTable.dtDistinctJobs(V.Local.iCounter).JOB!FieldValTrim, V.DataTable.dtDistinctJobs(V.Local.iCounter).SFX!FieldValTrim, V.Local.sFilter)
	F.Data.DataView.SetFilter("dtWCBase", "dvSetupFormatting", V.Local.sFilter)
	F.Intrinsic.Control.If(V.DataView.dtWCBase!dvSetupFormatting.RowCount, >, 0)
		
		F.Intrinsic.Control.If(V.Ambient.Date, >=, V.DataView.dtWCBase!dvSetupFormatting(0).DATE_DUE2!FieldVal)
			F.Intrinsic.String.Build("[JOB] = '{0}' and [SFX] = '{1}'", V.DataTable.dtDistinctJobs(V.Local.iCounter).JOB!FieldValTrim, V.DataTable.dtDistinctJobs(V.Local.iCounter).SFX!FieldValTrim, V.Local.sFilter)
			F.Data.DataView.SetFilter("dtWCBase", "dvSetupFormatting", V.Local.sFilter)
			F.Data.DataView.SetValue("dtWCBase", "dvSetupFormatting", -1, "LATE", True)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCounter)

F.Data.DataTable.Close("dtDistinctJobs")
F.Data.DataView.Close("dtWCBase", "dvSetupFormatting")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.CheckSetupOnTime.End

Program.Sub.SecurityControls.Start
F.Intrinsic.Control.Try

GUI.frmResched.cmdSched.Enabled(V.Global.bEdit)
GUI.frmResched.optBwd.Enabled(V.Global.bEdit)
GUI.frmResched.optFwd.Enabled(V.Global.bEdit)
GUI.frmResched.optHere.Enabled(V.Global.bEdit)
GUI.frmResched.cmdClearSel.Enabled(V.Global.bEdit)
GUI.frmResched.cmdSaveOrder.Enabled(V.Global.bEdit)
GUI.frmResched.cmdClearGUIOrder.Enabled(V.Global.bEdit)
GUI.frmResched.cmdReloadAPS.Enabled(V.Global.bEdit)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.SecurityControls.End

Program.Sub.cmdClearSel_Click.Start
F.Intrinsic.Control.Try

V.Local.iCnt.Declare
V.Local.sPriority.Declare
V.Local.dDueDate.Declare

F.Intrinsic.Control.If(V.DataTable.dtWC.Exists)
	F.Data.DataTable.SetValue("dtWC",-1,"Sel",False)
	F.Data.DataTable.SetValue("dtWC",-1,"NEWWC","")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtWC.RowCount--,1)
	Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","PRIORITY",V.Local.iCnt,V.Local.sPriority)
	F.Data.DataTable.SetValue("dtWC",V.Local.iCnt,"PRIORITY2",V.Local.sPriority)
	Gui.frmResched.GsGCWC.GetCellValueByColumnName("gvWC","DATE_DUE",V.Local.iCnt,V.Local.dDueDate)
	F.Data.DataTable.SetValue("dtWC",V.Local.iCnt,"DATE_DUE2",V.Local.dDueDate)
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdClearSel_Click.End

Program.Sub.ConditionalFormatting.Start
F.Intrinsic.Control.Try

V.Local.iCnt.Declare(Long)
V.Local.sCellColor.Declare(String)

GUI.frmResched.lblStatus.Caption("Setting up conditional formatting....")

GUI.frmResched.GsGCWC.AddStyleFormatCondition("gvWC", "MAT", "Closed", "Equal", True)
GUI.frmResched.GsGCWC.AddStyleFormatCondition("gvWC", "MAT", "Open", "Equal", False)
GUI.frmResched.GsGCWC.SetStyleFormatConditionProperty("gvWC", "MAT", "Closed", "BackColor", "LightGreen")
GUI.frmResched.GsGCWC.SetStyleFormatConditionProperty("gvWC", "MAT", "Open", "BackColor", "Pink")

GUI.frmResched.GsGCWC.AddStyleFormatCondition("gvWC", "UNSORTED", "Unsorted", "Equal", True)
GUI.frmResched.GsGCWC.SetStyleFormatConditionProperty("gvWC", "UNSORTED", "Unsorted", "BackColor", "Pink")

GUI.frmResched.GsGCWC.AddStyleFormatCondition("gvWC", "LATE", "Late", "Equal", True)
GUI.frmResched.GsGCWC.SetStyleFormatConditionProperty("gvWC", "LATE", "Late", "ForeColor", "Red")
GUI.frmResched.GsGCWC.SetStyleFormatConditionProperty("gvWC", "LATE", "Late", "ApplyToRow", True)

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtWC.RowCount--,1)
	Gui.frmResched.GsGCWC.SetRowAppearance("gvWC",V.Local.iCnt,"BackColor","WhiteSmoke")
	
	GUI.frmResched.GsGCWC.GetCellAppearance("gvWC", 1, V.Local.iCnt, "ForeColor", V.Local.sCellColor)

	F.Intrinsic.Control.If(V.DataTable.dtWC(V.Local.iCnt).PrevQty!FieldVal,=,V.DataTable.dtWC(V.Local.iCnt).EST_QTY!FieldVal)
		Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"HAlignment","Center")
		Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"BackColor","LightGreen")
		Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"ForeColor","Blue")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtWC(V.Local.iCnt).PrevClsd!FieldVal,=,"Y")
		F.Intrinsic.Control.If(V.DataTable.dtWC(V.Local.iCnt).PrevQty!FieldVal,=,V.DataTable.dtWC(V.Local.iCnt).EST_QTY!FieldVal)
			Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"HAlignment","Center")
			Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"BackColor","LightGreen")
			Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"ForeColor","Blue")
		F.Intrinsic.Control.ElseIf(V.DataTable.dtWC(V.Local.iCnt).PrevQty!FieldVal,>,V.DataTable.dtWC(V.Local.iCnt).EST_QTY!FieldVal)
			Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"HAlignment","Center")
			Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"BackColor","LightBlue")
			Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"ForeColor","Blue")
		F.Intrinsic.Control.ElseIf(V.DataTable.dtWC(V.Local.iCnt).PrevQty!FieldVal,<,V.DataTable.dtWC(V.Local.iCnt).EST_QTY!FieldVal)
			Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"HAlignment","Center")
			Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"BackColor","LightSalmon")
			Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"ForeColor","Blue")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtWC(V.Local.iCnt).PrevSeq!FieldVal,=,"")
		Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"HAlignment","Center")
		Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"BackColor","LightGreen")
		Gui.frmResched.GsGCWC.SetCellAppearance("gvWC",1,V.Local.iCnt,"ForeColor","Blue")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(v.Local.iCnt)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.ConditionalFormatting.End

Program.Sub.FixSort.Start
'Renumber the sort column based on WC

F.Intrinsic.Control.Try

V.Local.iCounter.Declare(Long)
V.Local.sFilter.Declare(String)
V.Local.iJ.Declare(Long)
V.Local.bArgs.Declare(Boolean)
V.Local.bVisible.Declare(Boolean)

V.Local.bVisible.Set(V.Screen.frmResched!GsGCWC.Visible)

GUI.frmResched.GsGCWC.Visible(False)

F.Data.DataView.Create("dtWC", "dvWC", 22)
F.Data.DataView.ToDataTableDistinct("dtWC", "dvWC", "dtDistinctWC", "WC")

F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataTable.dtDistinctWC.RowCount--, 1)
	F.Intrinsic.String.Build("WC = '{0}'", V.DataTable.dtDistinctWC(V.Local.iCounter).WC!FieldValTrim, V.Local.sFilter)
	F.Data.DataView.SetFilter("dtWC", "dvWC", V.Local.sFilter)
	F.Data.DataView.SetSort("dtWC", "dvWC", "Original_Sort")
	F.Data.DataView.SetSeries("dtWC", "dvWC", "Sort", 10, 10)
	'F.Data.DataView.SetSeries("dtWC", "dvWC", "Original_Sort", 0, 1)
	'so we had to split the sort and original sort column
	'something about the way the original sort column being modified in the grid
	'wouldn't allow anything to be set to those records
	'supposedly this was a GAB bug and is fixed now
	'but I still haven't had luck with it
F.Intrinsic.Control.Next(V.Local.iCounter)
F.Data.DataView.Close("dtWC", "dvWC")
F.Data.Datatable.Close("dtDistinctWC")

GUI.frmResched.GsGCWC.Visible(V.Local.bVisible)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FixSort.End

Program.Sub.FixOriginalSort.Start
'set the original sort to the sort
'this is for when resorting after a reschedule
'bacause in fixSort, the sort is based on the original sort
'and that is only pulled in at the start
'so it needs to be updated if re-fixing the sort without refreshing

F.Intrinsic.Control.Try

V.Local.iCounter.Declare(Long)

F.Intrinsic.Control.If(V.DataTable.dtWC.Exists)
	F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataTable.dtWC.RowCount--, 1)
		F.Data.DataTable.SetValue("dtWC", V.Local.iCounter, "Original_Sort", V.DataTable.dtWC(V.Local.iCounter).Sort!FieldValLong)
	F.Intrinsic.Control.Next(V.Local.iCounter)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FixOriginalSort.End

Program.Sub.SetGridViewProperty.Start
F.Intrinsic.Control.Try

V.Local.sForm.Declare(String)
V.Local.sGridView.Declare(String)
V.Local.sDataTable.Declare(String)
V.Local.sProperty.Declare(String)
V.Local.sValue.Declare(String)
V.Local.sColumns.Declare(String)
V.Local.iCounter.Declare(Long)
V.Local.sGridControl.Declare(String)

V.Local.sForm.Set(V.Args.FORM)
V.Local.sGridView.Set(V.Args.GRIDVIEW)
V.Local.sDataTable.Set(V.Args.DATATABLE)
V.Local.sProperty.Set(V.Args.PROPERTY)
V.Local.sValue.Set(V.Args.VALUE)
V.Local.sGridControl.Set(V.Args.GRIDCONTROL)

V.Local.sColumns.Set(V.DataTable.[V.Local.sDataTable].FieldNames)

F.Intrinsic.String.Split(V.Local.sColumns, "*!*", V.Local.sColumns)
F.Intrinsic.Control.For(V.Local.iCounter, 0, V.Local.sColumns.UBound, 1)
	GUI.[V.Local.sForm].[V.Local.sGridControl].SetColumnProperty(V.Local.sGridView, V.Local.sColumns(V.Local.iCounter), V.Local.sProperty, V.Local.sValue)
F.Intrinsic.Control.Next(V.Local.iCounter)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.SetGridViewProperty.End

Program.Sub.SaveValue.Start
F.Intrinsic.Control.Try

V.Local.sValue.Declare(String)
V.Local.sColumn.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSort.Declare(String)
V.Local.sJob.Declare(String)
V.Local.sSuffix.Declare(String)
V.Local.sSeq.Declare(String)
V.Local.sWC.Declare(String)
V.Local.iIndex.Declare(Long)

V.Local.sColumn.Set(V.Args.Column)
V.Local.iIndex.Set(V.Args.Index)

V.Local.sValue.Set(V.DataTable.dtWC(V.Local.iIndex).[V.Local.sColumn]!FieldValTrim)
V.Local.sJob.Set(V.DataTable.dtWC(V.Local.iIndex).JOB!FieldValTrim)
V.Local.sSuffix.Set(V.DataTable.dtWC(V.Local.iIndex).SFX!FieldValTrim)
V.Local.sSeq.Set(V.DataTable.dtWC(V.Local.iIndex).SEQ!FieldValTrim)
V.Local.sWC.Set(V.DataTable.dtWC(V.Local.iIndex).WC!FieldValTrim)
V.Local.sSort.Set(V.DataTable.dtWC(V.Local.iIndex).SORT!FieldValTrim)

F.Intrinsic.String.Replace(V.Local.sColumn, "SORT", "ORDER_SORT", V.Local.sColumn)

F.Intrinsic.String.Build("select ID from GCG_5715_Columns where JOB = '{0}' and SUFFIX = '{1}' and SEQ = '{2}'", V.Local.sJob.Trim, V.Local.sSuffix.Trim, V.Local.sSeq.Trim, V.Local.sSQL)
F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)

F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
	F.Intrinsic.String.Build("Insert into GCG_5715_Columns (JOB, SUFFIX, SEQ, {0}) values ('{2}','{3}','{4}','{1}')", V.Local.sColumn, V.Local.sValue, V.Local.sJob, V.Local.sSuffix, V.Local.sSeq, V.Local.sSQL)
	F.Intrinsic.Control.CallSub(AddModifiedWC, "WC", V.Local.sWC)
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("Update GCG_5715_Columns set {0} = '{1}' where JOB = '{2}' and SUFFIX = '{3}' and SEQ = '{4}'", V.Local.sColumn, V.Local.sValue, V.Local.sJob, V.Local.sSuffix, V.Local.sSeq, V.Local.sSQL)
F.Intrinsic.Control.EndIf

F.ODBC.Connection!Con.Execute(V.Local.sSQL)
F.Intrinsic.Control.CallSub(SaveModifiedWCSort)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.SaveValue.End

Program.Sub.SetIcon.Start
F.Intrinsic.Control.Try

V.Local.sForm.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sIcon.Declare(String)
V.Local.iCounter.Declare(Long)

F.Intrinsic.String.Build("{0}\ART\gss2.ico",V.Caller.GlobalDir,v.Local.sIcon)
F.Intrinsic.File.Exists(V.Local.sIcon, V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists.Not)
	F.Intrinsic.String.Build("{0}\GAB\GAS\gss2.ico",V.Caller.PluginsDir,v.Local.sIcon)
	F.Intrinsic.File.Exists(V.Local.sIcon, V.Local.bExists)
	F.Intrinsic.Control.If(V.Local.bExists.Not)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.UI.GetFormList(V.Local.sForm)
F.Intrinsic.String.Split(V.Local.sForm, "*!*", V.Local.sForm)

F.Intrinsic.Control.For(V.Local.iCounter, 0, V.Local.sForm.UBound, 1)
	Gui.[V.Local.sForm(V.Local.iCounter)]..Icon(V.Local.sIcon)
F.Intrinsic.Control.Next(V.Local.iCounter)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.SetIcon.End

Program.Sub.cmdSaveOrder_Click.Start
F.Intrinsic.Control.Try

GUI.frmResched..Enabled(False)

F.Intrinsic.Control.CallSub(LoadWorkcenters)
F.Intrinsic.Control.CallSub(LoadWorkcenterGrid)
F.Intrinsic.Control.CallSub(LoadSelectedWorkCenters)

GUI.FormSaveOrder..Show

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdSaveOrder_Click.End

Program.Sub.LoadWorkcenters.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtWorkcenters.Exists, =, False)
	'F.Data.DataTable.CreateFromSQL("dtWorkcenters", "Con", "select RTRIM(MACHINE) WORKCENTER, RTRIM(WC_NAME) DESCRIPTION from V_WORKCENTERS union select RTRIM(WORK_GROUP) WORKCENTER, RTRIM(DESCR) DESCRIPTION from V_WORKGROUP_HEAD", True)	
	F.Data.DataTable.CreateFromSQL("dtWorkcenters", "Con", "select RTRIM(MACHINE) WORKCENTER, RTRIM(WC_NAME) DESCRIPTION from V_WORKCENTERS", True)	
	F.Data.DataTable.AddColumn("dtWorkcenters", "SELECTED", "Boolean", False)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadWorkcenters.End

Program.Sub.LoadWorkcenterGrid.Start
F.Intrinsic.Control.Try

GUI.FormSaveOrder.gsgcWorkcenters.AddGridviewFromDatatable("gvWorkcenters", "dtWorkcenters")

GUI.FormSaveOrder.gsgcWorkcenters.SetGridviewProperty("gvWorkcenters", "EnableAppearanceOddRow", True)

GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "WORKCENTER", "Caption", "WC")
GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "DESCRIPTION", "Caption", "Description")
GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "SELECTED", "ShowCaption", False)

GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "WORKCENTER", "HeaderFontBold", True)
GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "DESCRIPTION", "HeaderFontBold", True)
GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "SELECTED", "HeaderFontBold", True)

GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "WORKCENTER", "ReadOnly", True)
GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "DESCRIPTION", "ReadOnly", True)
GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "SELECTED", "ReadOnly", False)

GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "WORKCENTER", "AllowEdit", False)
GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "DESCRIPTION", "AllowEdit", False)
GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "SELECTED", "AllowEdit", True)

GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "WORKCENTER", "MinWidth", 60)
GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "DESCRIPTION", "MinWidth", 160)
GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "SELECTED", "MinWidth", 50)

GUI.FormSaveOrder.gsgcWorkcenters.SetColumnProperty("gvWorkcenters", "WORKCENTER", "SortOrder", "Ascending")

GUI.FormSaveOrder.gsgcWorkcenters.MainView("gvWorkcenters")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadWorkcenterGrid.End

Program.Sub.SetWorkcenterGridContextMenu.Start
F.Intrinsic.Control.Try

GUI.FormSaveOrder..ContextMenuCreate("ctxWorkcenters")

GUI.FormSaveOrder..ContextMenuAddItem("ctxWorkcenters", "Select", 0, "Select All")
GUI.FormSaveOrder..ContextMenuSetItemEventHandler("ctxWorkcenters", "Select", "ctxWorkcenters_Click")
GUI.FormSaveOrder..ContextMenuAddItem("ctxWorkcenters", "Deselect", 0, "Deselect All")
GUI.FormSaveOrder..ContextMenuSetItemEventHandler("ctxWorkcenters", "Deselect", "ctxWorkcenters_Click")

GUI.FormSaveOrder.gsgcWorkcenters.ContextMenuAttach("ctxWorkcenters")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.SetWorkcenterGridContextMenu.End

Program.Sub.ctxWorkcenters_Click.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Args.ItemName.UCase, =, "SELECT")
	F.Data.DataTable.SetValue("dtWorkcenters", -1, "SELECTED", True)
F.Intrinsic.Control.Else
	F.Data.DataTable.SetValue("dtWorkcenters", -1, "SELECTED", False)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.ctxWorkcenters_Click.End

Program.Sub.LoadSelectedWorkCenters.Start
'select modified workcenters by default

F.Intrinsic.Control.Try

V.Local.sWCs.Declare(String)
V.Local.sFilter.Declare(String)

F.Data.DataTable.SetValue("dtWorkcenters", -1, "SELECTED", False)

F.Intrinsic.String.Replace(V.Global.sModifiedWCs, "*!*", "','", V.Local.sWCs)
F.Intrinsic.String.Build("[WORKCENTER] in ('{0}')", V.Local.sWCs, V.Local.sFilter)

F.Data.DataView.Create("dtWorkcenters", "dvSelect", 22, V.Local.sFilter, "")
F.Data.DataView.SetValue("dtWorkcenters", "dvSelect", -1, "SELECTED", True)
F.Data.DataView.Close("dtWorkcenters", "dvSelect")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadSelectedWorkCenters.End

Program.Sub.cmdPost_Click.Start
F.Intrinsic.Control.Try

V.Local.iCounter.Declare(Long)
V.Local.sFilter.Declare(String)
V.Local.sWCs.Declare(String)
V.Local.sJob.Declare(String)
V.Local.sSuffix.Declare(String)
V.Local.sSplit.Declare(String)
V.Local.iRow.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sFile.Declare(String)
V.Local.sContents.Declare(String)

F.Data.DataView.Create("dtWorkcenters", "dvSelected", 22, "[SELECTED] = True", "")

F.Intrinsic.Control.If(V.DataView.dtWorkcenters!dvSelected.RowCount, <, 1)
	F.Intrinsic.UI.Msgbox("No workcenters selected.")
	F.Data.DataView.Close("dtWorkcenters", "dvSelected")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Data.DataView.ToString("dtWorkcenters", "dvSelected", "WORKCENTER", "***NODELIMITER***", "','", V.Local.sWCs)
F.Data.DataView.Close("dtWorkcenters", "dvSelected")

GUI.FormSaveOrder..Enabled(False)
GUI.FormSaveOrder.pbSaveOrder.Min(0)
GUI.FormSaveOrder.pbSaveOrder.Max(4)
GUI.FormSaveOrder.pbSaveOrder.Value(0)
GUI.FormSaveOrder.pbSaveOrder.Visible(True)

F.Intrinsic.String.Build("[WC] in ('{0}')", V.Local.sWCs, V.Local.sFilter)
F.Data.DataView.Create("dtWC", "dvPost", 22, V.Local.sFilter, "WC, SORT")
F.Data.DataView.ToDataTable("dtWC", "dvPost", "dtPost", True)
F.Data.DataView.Close("dtWC", "dvPost")

'grab start and end times
F.Intrinsic.Control.CallSub(GetFilter, "DataTable", "dtPost", "Field", "APS_JSS")
F.Intrinsic.String.Build("select RTRIM(JSS) JSS, BTM, ETM from APSV3_UBDETAIL where JSS in ('{0}') ORDER BY SAR,BTM, ETM, JSS", V.Args.Filter, V.Local.sSQL)
F.Data.DataTable.CreateFromSQL("dtTimes", "Con", V.Local.sSQL)

F.Data.Dictionary.CreateFromDataTable("dictTemp", "dtTimes", "JSS", "BTM")
F.Data.Dictionary.SetDefaultReturn("dictTemp", "1900-01-01")
F.Data.DataTable.AddColumn("dtPost", "BEGINNING_TIME", "Date", "1900-01-01")
F.Data.DataTable.FillFromDictionary("dtPost", "dictTemp", "APS_JSS", "BEGINNING_TIME")
F.Data.Dictionary.Close("dictTemp")

F.Data.Dictionary.CreateFromDataTable("dictTemp", "dtTimes", "JSS", "ETM")
F.Data.Dictionary.SetDefaultReturn("dictTemp", "1900-01-01")
F.Data.DataTable.AddColumn("dtPost", "ENDING_TIME", "Date", "1900-01-01")
F.Data.DataTable.FillFromDictionary("dtPost", "dictTemp", "APS_JSS", "ENDING_TIME")
F.Data.Dictionary.Close("dictTemp")

F.Data.DataTable.Close("dtTimes")

'pad out WC
F.Data.DataTable.AddExpressionColumn("dtPost", "PADDED_WORKCENTER", "String", "Substring([WC] + '    ', 1, 4)")
F.Data.DataTable.AddExpressionColumn("dtPost", "PADDED_ROUTER_WORKCENTER", "String", "Substring([SCHEDULED_WC] + '    ', 1, 4)")

'format date columns
F.Data.DataTable.AddColumn("dtPost", "BEGINNING_DATE_FORMAT", "String", "")
F.Data.DataTable.AddColumn("dtPost", "BEGINNING_TIME_FORMAT", "String", "")
F.Data.DataTable.AddColumn("dtPost", "ENDING_DATE_FORMAT", "String", "")
F.Data.DataTable.AddColumn("dtPost", "ENDING_TIME_FORMAT", "String", "")

F.Data.DataTable.SetValueFormat("dtPost", -1, "BEGINNING_TIME", "BEGINNING_DATE_FORMAT", "YYYYMMDD")
F.Data.DataTable.SetValueFormat("dtPost", -1, "BEGINNING_TIME", "BEGINNING_TIME_FORMAT", "HHNN")
F.Data.DataTable.SetValueFormat("dtPost", -1, "ENDING_TIME", "ENDING_DATE_FORMAT", "YYYYMMDD")
F.Data.DataTable.SetValueFormat("dtPost", -1, "ENDING_TIME", "ENDING_TIME_FORMAT", "HHNN")

F.Data.DataTable.AddExpressionColumn("dtPost", "PREVIOUS_CLOSED_FLAG", "String", "IIF([PREVIOUS_SEQUENCE_CLOSED_BOOLEAN], 'Y', 'N')")

'write the file
F.Intrinsic.String.Build("{0}\APSDL{1}", V.Caller.FilesDir, V.Caller.CompanyCode, V.Local.sFile)
F.Data.DataView.Create("dtPost", "dvPost", 22)
F.Data.DataView.ToString("dtPost", "dvPost", "APS_JSS*!*BEGINNING_DATE_FORMAT*!*ENDING_DATE_FORMAT*!*BEGINNING_TIME_FORMAT*!*ENDING_TIME_FORMAT*!*PADDED_ROUTER_WORKCENTER*!*PADDED_WORKCENTER*!*PREVIOUS_CLOSED_FLAG", "", V.Ambient.NewLine, V.Local.sContents)
F.Data.DataView.Close("dtPost", "dvPost")
F.Data.DataTable.Close("dtPost")

F.Intrinsic.File.String2File(V.Local.sFile, V.Local.sContents)

''create blank DT for schema
'F.Data.DataTable.CreateFromSQL("dtPost", "Con", "select * from ATG_APSV3_JBSORT where JOB = ''")
'F.Data.DataTable.DeleteRow("dtPost")
'F.Data.DataTable.AcceptChanges("dtPost")
'F.Data.DataTable.AddColumn("dtPost", "SORT", "Long")
'F.Data.DataTable.AddColumn("dtPost", "DASHBOARD_WC", "String", "")

'F.Data.DataTable.AddExpressionColumn("dtWC", "PREVIOUS_CLOSED_BOOLEAN", "Boolean", "IIF(PrevClsd = 'Y', True, False)")

'GUI.FormSaveOrder.pbSaveOrder.Value(1)

'F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataView.dtWC!dvPost.RowCount--, 1)
'	F.Intrinsic.String.Split(V.DataView.dtWC!dvPost(V.Local.iCounter).WO!FieldValTrim, "-", V.Local.sSplit)
'	F.Intrinsic.Control.If(V.Local.sSplit.UBound, =, 0)
'		V.Local.sSuffix.Set("")
'		V.Local.sJob.Set(V.Local.sSplit)
'	F.Intrinsic.Control.Else
'		V.Local.sSuffix.Set(V.Local.sSplit(1))
'		V.Local.sJob.Set(V.Local.sSplit(0))
'	F.Intrinsic.Control.EndIf
'	
'	F.Intrinsic.Math.Add(V.Local.iCounter, 1, V.Local.iRow)
'		F.Data.DataTable.AddRow("dtPost", "JOB", V.Local.sJob, "SFX", V.Local.sSuffix, "SEQ", V.DataView.dtWC!dvPost(V.Local.iCounter).SEQ!FieldValTrim, "PRIORITY", V.DataView.dtWC!dvPost(V.Local.iCounter).PRIORITY2!FieldValLong, "PART", V.DataView.dtWC!dvPost(V.Local.iCounter).PART!FieldValTrim, "DESCRIPTION", V.DataView.dtWC!dvPost(V.Local.iCounter).PART_DESCRIPTION!FieldValTrim, "DUEDATE", V.DataView.dtWC!dvPost(V.Local.iCounter).DUEDATE!FieldVal, "CUSTNAME", V.DataView.dtWC!dvPost(V.Local.iCounter).CUSTOMER!FieldValTrim, "SEQRES", V.DataView.dtWC!dvPost(V.Local.iCounter).SCHEDULED_WC!FieldValTrim, "COMP", V.DataView.dtWC!dvPost(V.Local.iCounter).PREVIOUS_CLOSED_BOOLEAN!FieldVal, "SCHEDSTART", V.DataView.dtWC!dvPost(V.Local.iCounter).STARTDATE!FieldVal, "SCHEDEND", V.DataView.dtWC!dvPost(V.Local.iCounter).DUEDATE!FieldVal, "SORT", V.DataView.dtWC!dvPost(V.Local.iCounter).SORT!FieldValLong, "DASHBOARD_WC", V.DataView.dtWC!dvPost(V.Local.iCounter).WC!FieldValTrim)
'F.Intrinsic.Control.Next(V.Local.iCounter)

'GUI.FormSaveOrder.pbSaveOrder.Value(2)

'F.Data.DataTable.RemoveColumn("dtWC", "PREVIOUS_CLOSED_BOOLEAN")
'F.Data.DataView.Close("dtWC", "dvPost")

''now split, set order, and save
'F.Data.DataView.Create("dtPost", "dvWCPost", 22, "", "SORT")
'F.Data.DataView.ToDataTableDistinct("dtPost", "dvWCPost", "dtDistinctWCPost", "SEQRES")

'F.Intrinsic.Control.For(V.Local.iCounter, 0, V.DataTable.dtDistinctWCPost.RowCount--, 1)
'	F.Intrinsic.String.Build("[SEQRES] = '{0}'", V.DataTable.dtDistinctWCPost(V.Local.iCounter).SEQRES!FieldValTrim, V.Local.sFilter)
'	F.Data.DataView.SetFilter("dtPost", "dvWCPost", V.Local.sFilter)
'	F.Data.DataView.SetSeries("dtPost", "dvWCPost", "ROW", 1, 1)
'	
'	F.Data.DataView.ToString("dtPost", "dvWCPost", "SEQRES", "***NODELIMITER***", "*!*", V.Local.sFilter)
'	F.Intrinsic.String.Split(V.Local.sFilter, "*!*", V.Local.sFilter)
'	F.Intrinsic.String.RemoveArrayDuplicates(V.Local.sFilter, V.Local.sFilter)
'	F.Intrinsic.String.Join(V.Local.sFilter, "', '", V.Local.sFilter)
'	
'	'clear old records
'	F.Intrinsic.String.Build("delete from ATG_APSV3_JBSORT where SEQRES in ('{0}')", V.Local.sFilter, V.Local.sSQL)
'	F.ODBC.Connection!Con.Execute(V.Local.sSQL)
'	
'	'save new
'	F.Data.DataView.ToDataTable("dtPost", "dvWCPost", "dtPostTemp")
'	F.Data.DataTable.RemoveColumn("dtPostTemp", "SORT")
'	F.Data.DataTable.RemoveColumn("dtPostTemp", "DASHBOARD_WC")
'	F.Data.DataTable.SaveToDB("dtPostTemp", "Con", "ATG_APSV3_JBSORT", "JOB*!*SFX*!*SEQ", 128)
'	F.Data.DataTable.Close("dtPostTemp")
'F.Intrinsic.Control.Next(V.Local.iCounter)

'GUI.FormSaveOrder.pbSaveOrder.Value(3)

'F.Data.DataTable.Close("dtDistinctWCPost")
'F.Data.DataView.Close("dtPost", "dvWCPost")
'F.Data.DataTable.Close("dtPost")

GUI.FormSaveOrder.pbSaveOrder.Value(4)
GUI.FormSaveOrder.pbSaveOrder.Visible(False)

F.ODBC.Connection!con.ExecuteAndReturn("select ID from V_HOOK_ASSOCIATION where ID = '000038110' and SCRIPT_NAME = 'ATG_APS_DISPATCH_GEN_IMPORT.gas' and ACTIVE_FLAG = 'A'", V.Local.sRet)
F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
	'F.Intrinsic.UI.Msgbox("Warning: To post the order to the GUI the script ATG_APS_DISPATCH_GEN_IMPORT.gas must be active on the hook 38110. The Standard Online Option Refresh Workcenter Dispatch From APS Every X Hours Instead of Hourly must also be activated and a value entered into the Hours field. Once this is done and Online Update is restarted, the order will be posted.", "Warning")
	F.Intrinsic.UI.Msgbox("Order successfully posted.", "Success")
F.Intrinsic.Control.Else
	'F.Intrinsic.UI.Msgbox("Order successfully posted. The order will show on the GUI after the next time Online Update processes.", "Success")
	F.Intrinsic.UI.Msgbox("Warning: To post the order to the GUI using this dashboard, please deactivate the script ATG_APS_DISPATCH_GEN_IMPORT.gas on the hook 38110, otherwise the order will be overwritten", "Warning")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(FormSaveOrder_UnLoad)

GUI.FormSaveOrder..Enabled(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdPost_Click.End

Program.Sub.FormSaveOrder_UnLoad.Start
F.Intrinsic.Control.Try

GUI.FormSaveOrder..Visible(False)
GUI.frmResched..Enabled(True)
GUI.frmResched..SetFocus

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FormSaveOrder_UnLoad.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)
V.Static.bError.Declare(Boolean, False)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Static.bError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf
V.Static.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		'F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE, "TASK", V.Args.Task)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.LoadAPSReloadFile.Start
F.Intrinsic.Control.Try

V.Local.sPath.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sText.Declare(String)

F.Intrinsic.String.Build("{0}\Custom\5715\APS Reload", V.Caller.GlobalDir, V.Local.sPath)
F.Intrinsic.Control.CallSub(CheckDirectories, "DIRECTORIES", V.Local.sPath)

F.Intrinsic.String.Build("{0}\LAST_APS_RELOAD.dat", V.Local.sPath, V.Local.sPath)
F.Intrinsic.File.Exists(V.Local.sPath, V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists.Not)
	F.Intrinsic.Control.CallSub(UpdateAPSReloadFile)
F.Intrinsic.Control.EndIf

F.Intrinsic.File.File2String(V.Local.sPath, V.Local.sText)
GUI.frmResched.txtLastAPSReload.Text(V.Local.sText)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.LoadAPSReloadFile.End

Program.Sub.UpdateAPSReloadFile.Start
F.Intrinsic.Control.Try

V.Local.sPath.Declare(String)

F.Intrinsic.String.Build("{0}\Custom\5715\APS Reload\LAST_APS_RELOAD.dat", V.Caller.GlobalDir, V.Local.sPath)
F.Intrinsic.File.String2File(V.Local.sPath, V.Ambient.Now)
GUI.frmResched.txtLastAPSReload.Text(V.Ambient.Now)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.UpdateAPSReloadFile.End

Program.Sub.cmdReloadAPS_Click.Start
F.Intrinsic.Control.Try

V.Local.iRet.Declare(Long)
V.Local.sSQL.Declare(String)

F.Intrinsic.UI.Msgbox("Are you sure you want to reload the APS schedule? This will clear all sorting.", "Reload", 4, V.Local.iRet)
F.Intrinsic.Control.If(V.Local.iRet, !=, V.Ambient.MsgBoxYes)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'clear the sort so on the next reload the jobs will be in order of scheduled
F.ODBC.Connection!Con.Execute("Update GCG_5715_Columns set ORDER_SORT = null")

V.Global.bReload.Set(True)
F.Intrinsic.Control.CallSub(cmdRefresh_Click)
F.Intrinsic.Control.CallSub(UpdateAPSReloadFile)
V.Global.bReload.Set(False)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdReloadAPS_Click.End

Program.Sub.CheckDirectories.Start
'check if the given import directories exist
'create them if they don't
'pass directories delimited with *!*

F.Intrinsic.Control.Try

V.Local.sDirectories.Declare(String)
V.Local.sPath.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.iCounter.Declare(Long)

V.Local.sDirectories.Set(V.Args.Directories)
F.Intrinsic.String.Split(V.Local.sDirectories, "*!*", V.Local.sDirectories)

F.Intrinsic.Control.For(V.Local.iCounter, 0, V.Local.sDirectories.UBound, 1)
	V.Local.sPath.Set(V.Local.sDirectories(V.Local.iCounter))
	F.Intrinsic.File.DirExists(V.Local.sPath, V.Local.bExists)
	F.Intrinsic.Control.If(V.Local.bExists.Not)
		F.Intrinsic.File.CreateDir(V.Local.sPath)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCounter)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.CheckDirectories.End

Program.Sub.GetFilter.Start
'pass DATATABLE, FIELD (*!* delimiter)
'returns filter
'returns a list of the distinct values of that field delimited by ','

F.Intrinsic.Control.Try

V.Local.iCounter.Declare(Long, 0)
V.Local.sFilter.Declare(String)
V.Local.sDataView.Declare(String, "dvGetFilterTemp_0")
V.Local.sDataViewFilter.Declare(String)

'make sure no duplicate dataview
F.Intrinsic.Control.DoUntil(V.DataView.[V.Args.DataTable]![V.Local.sDataView].Exists, =, False)
	F.Intrinsic.String.Build("dvGetFilterTemp_{0}", V.Local.iCounter.++, V.Local.sDataView)
F.Intrinsic.Control.Loop

'create in filter
F.Intrinsic.String.Build("Convert([{0}], 'System.String') <> ''", V.Args.Field, V.Local.sDataViewFilter)
F.Data.DataView.Create(V.Args.DataTable, V.Local.sDataView, 22, V.Local.sDataViewFilter, "")
F.Data.DataView.ToString(V.Args.DataTable, V.Local.sDataView, V.Args.Field, "***NODELIMITER***", "*!*", V.Local.sFilter)
F.Data.DataView.Close(V.Args.DataTable, V.Local.sDataView)

V.Local.sFilter.Set(V.Local.sFilter.PSQLFriendly)

'remove duplicates
F.Intrinsic.String.Split(V.Local.sFilter, "*!*", V.Local.sFilter)
F.Intrinsic.String.RemoveArrayDuplicates(V.Local.sFilter, V.Local.sFilter)
F.Intrinsic.String.Join(V.Local.sFilter, "','", V.Local.sFilter)
V.Local.sFilter.RedimPreserve(0,0)

F.Intrinsic.Variable.AddRV("FILTER", V.Local.sFilter)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.GetFilter.End

Program.Sub.cmdClearGUIOrder_Click.Start
'delete the APSDL file to clear the GUI order

F.Intrinsic.Control.Try

V.Local.sFile.Declare(String)
V.Local.bExists.Declare(Boolean, False)
V.Local.iRet.Declare(Long)

F.Intrinsic.UI.Msgbox("Are you sure you want to clear the GUI sorting?", "Clear Sort", 4, V.Local.iRet)
F.Intrinsic.Control.If(V.Local.iRet, =, V.Ambient.MsgBoxYes)

	F.Intrinsic.String.Build("{0}\APSDL{1}", V.Caller.FilesDir, V.Caller.CompanyCode, V.Local.sFile)
	F.Intrinsic.File.Exists(V.Local.sFile, V.Local.bExists)
	F.Intrinsic.Control.If(V.Local.bExists)
		F.Intrinsic.File.DeleteFile(V.Local.sFile)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.UI.Msgbox("GUI Order Cleared successfully.")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdClearGUIOrder_Click.End

Program.Sub.AddLog.Start
'pass a project #, and a message
'date and time will be automatically added
'pass PROJECT (Folder, log name)
'MESSAGE (what to log)

F.Intrinsic.Control.Try

V.Local.sProject.Declare(String)
V.Local.sMessage.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sPath.Declare(String)
V.Local.sFile.Declare(String)
V.Local.sContents.Declare(String)
V.Local.sTask.Declare(String)

V.Local.sProject.Set(V.Args.Project.Trim)
V.Local.sMessage.Set(V.Args.Message.Trim)
V.Local.sTask.Set(V.Args.Task)

F.Intrinsic.String.Replace(V.Local.sMessage, V.Ambient.NewLine, ", ", V.Local.sMessage)

F.Intrinsic.File.MakeFilenameFriendly(V.Local.sProject, V.Local.sProject)
F.Intrinsic.String.Build("{0}\Custom\{1}\{2}\Log", V.Caller.GlobalDir, V.Local.sProject, V.Caller.CompanyCode, V.Local.sPath)
F.Intrinsic.Control.CallSub(CheckDirectories, "DIRECTORIES", V.Local.sPath)

F.Intrinsic.String.Build("{0}\{1}_Log.txt", V.Local.sPath, V.Local.sTask, V.Local.sFile)
F.Intrinsic.File.Exists(V.Local.sFile, V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists.Not)
	F.Intrinsic.String.Build("{0} {1}:{2}Log Start", V.Ambient.Date.FormatYYYY-MM-DD, V.Ambient.Time, V.Ambient.Tab, V.Local.sContents)
	F.Intrinsic.File.String2File(V.Local.sFile, V.Local.sContents)
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("{0} {1}:{2}{3}", V.Ambient.Date.FormatYYYY-MM-DD, V.Ambient.Time, V.Ambient.Tab, V.Local.sMessage, V.Local.sContents)
F.Intrinsic.File.Append2FileNewLine(V.Local.sFile, V.Local.sContents)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "Callback", "frmResched_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.AddLog.End
